/*
 * Catalog API
 * This API lists data sets available on Agrimetrics platform.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Billable;
import com.konfigthis.client.model.ManageDatasetIngestFileNewLayerRequest;
import com.konfigthis.client.model.ManageLayerIngestFileRequest;
import com.konfigthis.client.model.NewLayers;
import com.konfigthis.client.model.ServiceDefinition;
import com.konfigthis.client.model.ServiceDefinitionResponse;
import com.konfigthis.client.model.ServiceDefinitionUpdateExistingDefinitionRequest;
import java.net.URI;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AdminApi
 */
@Disabled
public class AdminApiTest {

    private static AdminApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AdminApi(apiClient);
    }

    /**
     * Create new service definition
     *
     * &gt; :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**  Create new service definition within a data set. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewDefinitionTest() throws ApiException {
        String datasetId = null;
        String layerName = null;
        String service = null;
        String WFS = null;
        String WCS = null;
        String WMS = null;
        String WMTS = null;
        String ogCApiFeatures = null;
        String ogCApiTiles = null;
        Boolean temporal = null;
        String datastore = null;
        String geoserverHostName = null;
        String geometryField = null;
        Billable billable = null;
        Double defaultEPSGCode = null;
        ServiceDefinitionResponse response = api.createNewDefinition(datasetId, layerName, service, WFS, WCS, WMS, WMTS, ogCApiFeatures, ogCApiTiles)
                .temporal(temporal)
                .datastore(datastore)
                .geoserverHostName(geoserverHostName)
                .geometryField(geometryField)
                .billable(billable)
                .defaultEPSGCode(defaultEPSGCode)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete service definition
     *
     * &gt; :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**  Delete service definition given layer ID 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteByIdTest() throws ApiException {
        UUID layerId = null;
        api.deleteById(layerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete layer
     *
     * &gt; :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**  Delete the datastore and layer relating to a zip file on a data set. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteLayerTest() throws ApiException {
        UUID layerId = null;
        api.deleteLayer(layerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get service definition
     *
     * &gt; :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**  Get the service definition for a given layer ID 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByLayerIdTest() throws ApiException {
        UUID layerId = null;
        ServiceDefinitionResponse response = api.getByLayerId(layerId)
                .execute();
        // TODO: test validations
    }

    /**
     * Ingest a file to a layer
     *
     * &gt; :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**  Ingest a file that has been uploaded to a data set. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ingestFileTest() throws ApiException {
        String fileId = null;
        UUID layerId = null;
        String fileName = null;
        String datetime = null;
        api.ingestFile(fileId, layerId)
                .fileName(fileName)
                .datetime(datetime)
                .execute();
        // TODO: test validations
    }

    /**
     * Ingest file to new layer
     *
     * &gt; :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**  Ingest a file that has been uploaded to the catalog to create a new layer. See [supported ingest formats](doc:supported-ingest-formats) for supported formats. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ingestFileNewLayerTest() throws ApiException {
        String fileUri = null;
        UUID datasetId = null;
        NewLayers response = api.ingestFileNewLayer(fileUri, datasetId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a file from a layer
     *
     * &gt; :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**  Remove a file from a layer. When you are deleting a file from a layer, the layer may remain if any other files were ingested onto the same layer. If removing a raster file, provide the fileName query parameter; if removing a vector file, provide the fileUri. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeFileTest() throws ApiException {
        UUID layerId = null;
        URI fileUri = null;
        String filename = null;
        api.removeFile(layerId)
                .fileUri(fileUri)
                .filename(filename)
                .execute();
        // TODO: test validations
    }

    /**
     * Update service definition
     *
     * &gt; :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**  Update an existing service definition with billing and coordinates reference system metadata. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExistingDefinitionTest() throws ApiException {
        UUID layerId = null;
        Billable billable = null;
        Double defaultEPSGCode = null;
        ServiceDefinitionResponse response = api.updateExistingDefinition(layerId)
                .billable(billable)
                .defaultEPSGCode(defaultEPSGCode)
                .execute();
        // TODO: test validations
    }

}
