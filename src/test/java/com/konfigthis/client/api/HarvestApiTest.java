/*
 * Catalog API
 * This API lists data sets available on Agrimetrics platform.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.GroupCode;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HarvestApi
 */
@Disabled
public class HarvestApiTest {

    private static HarvestApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new HarvestApi(apiClient);
    }

    /**
     * Harvest xml data on the given group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void xmlDataOnGroupTest() throws ApiException {
        GroupCode group = null;
        String service = null;
        String request = null;
        String version = null;
        Double startPosition = null;
        Double maxRecords = null;
        List<UUID> id = null;
        String outputSchema = null;
        String elementsetname = null;
        String outputFormat = null;
        String typeNames = null;
        String resultType = null;
        Object response = api.xmlDataOnGroup(group)
                .service(service)
                .request(request)
                .version(version)
                .startPosition(startPosition)
                .maxRecords(maxRecords)
                .id(id)
                .outputSchema(outputSchema)
                .elementsetname(elementsetname)
                .outputFormat(outputFormat)
                .typeNames(typeNames)
                .resultType(resultType)
                .execute();
        // TODO: test validations
    }

    /**
     * Harvest xml data on the given group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void xmlDataOnGroupPostTest() throws ApiException {
        GroupCode group = null;
        String service = null;
        String request = null;
        String version = null;
        Double startPosition = null;
        Double maxRecords = null;
        List<UUID> id = null;
        String outputSchema = null;
        String elementsetname = null;
        String outputFormat = null;
        String typeNames = null;
        String resultType = null;
        String response = api.xmlDataOnGroupPost(group)
                .service(service)
                .request(request)
                .version(version)
                .startPosition(startPosition)
                .maxRecords(maxRecords)
                .id(id)
                .outputSchema(outputSchema)
                .elementsetname(elementsetname)
                .outputFormat(outputFormat)
                .typeNames(typeNames)
                .resultType(resultType)
                .execute();
        // TODO: test validations
    }

}
