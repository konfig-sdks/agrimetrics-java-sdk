/*
 * Catalog API
 * This API lists data sets available on Agrimetrics platform.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BatchIdentityInputEntitlementsInner;
import com.konfigthis.client.model.DataSetPatch;
import com.konfigthis.client.model.DataSetTemplateEntity;
import com.konfigthis.client.model.DataSetTemplateMetadata;
import com.konfigthis.client.model.DataSetTemplatePatchMetadata;
import com.konfigthis.client.model.Entitlements;
import com.konfigthis.client.model.EntryUpdateResponse;
import com.konfigthis.client.model.Exchange;
import com.konfigthis.client.model.TemplateListPermissionsToViewResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplateApi
 */
@Disabled
public class TemplateApiTest {

    private static TemplateApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TemplateApi(apiClient);
    }

    /**
     * Create a new template for creating catalogue entries.
     *
     * Creates a single template that can be used to create similar catalogue entries.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCatalogEntryTest() throws ApiException {
        String name = null;
        String description = null;
        DataSetPatch dataSet = null;
        List<BatchIdentityInputEntitlementsInner> entitlements = null;
        Entitlements creatorEntitlements = null;
        Exchange exchange = null;
        EntryUpdateResponse response = api.createCatalogEntry(name)
                .description(description)
                .dataSet(dataSet)
                .entitlements(entitlements)
                .creatorEntitlements(creatorEntitlements)
                .exchange(exchange)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a specific template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSpecificTemplateTest() throws ApiException {
        UUID templateId = null;
        EntryUpdateResponse response = api.deleteSpecificTemplate(templateId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a specific template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificTemplateTest() throws ApiException {
        UUID templateId = null;
        DataSetTemplateEntity response = api.getSpecificTemplate(templateId)
                .execute();
        // TODO: test validations
    }

    /**
     * List all templates you have permission to view.
     *
     * List all templates you have permission to view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listPermissionsToViewTest() throws ApiException {
        TemplateListPermissionsToViewResponse response = api.listPermissionsToView()
                .execute();
        // TODO: test validations
    }

    /**
     * Update a template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTemplateItemTest() throws ApiException {
        String name = null;
        UUID templateId = null;
        String description = null;
        DataSetPatch dataSet = null;
        List<BatchIdentityInputEntitlementsInner> entitlements = null;
        Entitlements creatorEntitlements = null;
        Exchange exchange = null;
        DataSetTemplateEntity response = api.updateTemplateItem(name, templateId)
                .description(description)
                .dataSet(dataSet)
                .entitlements(entitlements)
                .creatorEntitlements(creatorEntitlements)
                .exchange(exchange)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTemplateItem_0Test() throws ApiException {
        UUID templateId = null;
        String description = null;
        String name = null;
        DataSetPatch dataSet = null;
        List<BatchIdentityInputEntitlementsInner> entitlements = null;
        Entitlements creatorEntitlements = null;
        DataSetTemplateEntity response = api.updateTemplateItem_0(templateId)
                .description(description)
                .name(name)
                .dataSet(dataSet)
                .entitlements(entitlements)
                .creatorEntitlements(creatorEntitlements)
                .execute();
        // TODO: test validations
    }

}
