/*
 * Catalog API
 * This API lists data sets available on Agrimetrics platform.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The geo spatial coverage of the data set.
 */
@JsonAdapter(SpatialCoverage.Adapter.class)public enum SpatialCoverage {
  
  UNITED_KINGDOM("United Kingdom"),
  
  ENGLAND("England"),
  
  NORTHERN_IRELAND("Northern Ireland"),
  
  SCOTLAND("Scotland"),
  
  WALES("Wales"),
  
  CANADA("Canada"),
  
  ETHIOPIA("Ethiopia"),
  
  FRANCE("France"),
  
  INDIA("India"),
  
  KENYA("Kenya"),
  
  MEXICO("Mexico"),
  
  NETHERLANDS("Netherlands"),
  
  SPAIN("Spain"),
  
  TANZANIA("Tanzania"),
  
  UGANDA("Uganda"),
  
  UNITED_STATES("United States"),
  
  GLOBAL_ONLY("Global only");

  private String value;

  SpatialCoverage(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static SpatialCoverage fromValue(String value) {
    for (SpatialCoverage b : SpatialCoverage.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<SpatialCoverage> {
    @Override
    public void write(final JsonWriter jsonWriter, final SpatialCoverage enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SpatialCoverage read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return SpatialCoverage.fromValue(value);
    }
  }
}

