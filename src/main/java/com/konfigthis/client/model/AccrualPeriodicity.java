/*
 * Catalog API
 * This API lists data sets available on Agrimetrics platform.
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Accrual periodicity options
 */
@JsonAdapter(AccrualPeriodicity.Adapter.class)public enum AccrualPeriodicity {
  
  HOURLY("Hourly"),
  
  DAILY("Daily"),
  
  THREE_TIMES_A_WEEK("Three times a week"),
  
  SEMIWEEKLY("Semiweekly"),
  
  WEEKLY("Weekly"),
  
  THREE_TIMES_A_MONTH("Three times a month"),
  
  BIWEEKLY("Biweekly"),
  
  SEMIMONTHLY("Semimonthly"),
  
  MONTHLY("Monthly"),
  
  BIMONTHLY("Bimonthly"),
  
  QUARTERLY("Quarterly"),
  
  THREE_TIMES_A_YEAR("Three times a year"),
  
  SEMIANNUAL("Semiannual"),
  
  ANNUAL("Annual"),
  
  BIENNIAL("Biennial"),
  
  TRIENNIAL("Triennial"),
  
  CONTINUOUS("Continuous"),
  
  IRREGULAR("Irregular"),
  
  CONTINUAL("continual"),
  
  DAILY("daily"),
  
  WEEKLY("weekly"),
  
  FORTNIGHTLY("fortnightly"),
  
  MONTHLY("monthly"),
  
  QUARTERLY("quarterly"),
  
  BIANNUALLY("biannually"),
  
  ANNUALLY("annually"),
  
  ASNEEDED("asNeeded"),
  
  IRREGULAR("irregular"),
  
  NOTPLANNED("notPlanned"),
  
  UNKNOWN("unknown");

  private String value;

  AccrualPeriodicity(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AccrualPeriodicity fromValue(String value) {
    for (AccrualPeriodicity b : AccrualPeriodicity.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AccrualPeriodicity> {
    @Override
    public void write(final JsonWriter jsonWriter, final AccrualPeriodicity enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AccrualPeriodicity read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AccrualPeriodicity.fromValue(value);
    }
  }
}

