openapi: 3.0.0
info:
  description: This API lists data sets available on Agrimetrics platform.
  title: Catalog API
  version: ""
  x-konfig-ignore:
    object-with-no-properties: true
  x-konfig-has-globally-required-security: true
  x-konfig-uses-multipart-form-data: true
servers:
- url: https://api-test.agrimetrics.co.uk/catalog
security:
- JWT: []
tags:
- name: Dataset
- name: OGCAPI
- name: OGC API Tiles
- name: Admin
- name: Manage Layer
- name: dataRequest
- name: Template
- name: Query Layer
- name: Service Definition
- name: WFS
- name: WMTS REST
- name: AccessRequest
- name: Status
- name: WMS
- name: WCS
- name: ESRI
- name: Harvest
- name: Query Dataset
- name: Manage Dataset
- name: WMTS
- name: Import
- name: Shapefile
- name: Authentication
- name: Graph
- name: Image
paths:
  /authenticate:
    post:
      deprecated: false
      description: Retrieve an Agrimetrics JWT to be used as additional authentication
        on specified endpoints
      operationId: Authentication_getJwt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationGetJwtRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "jwts": {
                            "agrimetrics": {
                                "token_type": "Bearer",
                                "access_token": "9d7e80a0-ad76-4a5c-8810-91ffc9d5858f"
                            }
                        }
                    }
              schema:
                $ref: '#/components/schemas/AuthenticationGetJwtResponse'
          description: "200"
        "400":
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                $ref: '#/components/schemas/AuthenticationGetJwt400Response'
          description: "400"
          x-do-not-generate: true
      summary: Get JWT
      tags:
      - Authentication
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--authenticate
      x-content-type: application/json
      x-accepts: application/json
  /status:
    get:
      description: Get status of catalog API.
      operationId: Status_getCatalogApiStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusGetCatalogApiStatusResponse'
          description: Status of catalog API.
      security:
      - {}
      - apiKeyQuery: []
      summary: Get status of catalog API.
      tags:
      - Status
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--status
      x-accepts: application/json
  /query:
    post:
      description: Cut one or more layers to a shape boundary and retrieve the features
        as multiple layers in a single downloadable file
      operationId: QueryLayer_cutShapeBoundaryAndRetrieve
      parameters:
      - description: A layer to query
        explode: true
        in: query
        name: layer
        required: true
        schema:
          items:
            $ref: '#/components/schemas/LayerId'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieveRequest'
          application/geo+json:
            schema:
              $ref: '#/components/schemas/GeoJSONPolygon'
          application/zipped-shapefile:
            schema:
              $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieveRequest1'
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieveResponse'
            application/gml+xml; version=3.2:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve200Response'
            application/vnd.google-earth.kml+xml:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve200Response'
            application/zipped-shapefile:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve200Response'
            application/x.gdb+zip:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve200Response'
            application/x.mid-mif+zip:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve200Response'
            application/x.tab+zip:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve200Response'
            application/dxf:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve200Response'
            application/dxf+zip:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve200Response'
          description: Result
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve403Response'
          description: Forbidden. Check permissions to view these layers.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve404Response'
          description: Not found. One or more layers could not be found.
          x-do-not-generate: true
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryLayerCutShapeBoundaryAndRetrieve406Response'
          description: Not acceptable. Cannot produce output type.
          x-do-not-generate: true
      security: []
      summary: Query and download sections of one or more layers
      tags:
      - Query Layer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--query
      x-content-type: application/json
      x-accepts: application/json
  /datasets/{datasetId}:
    get:
      description: Get the list of layers contained in a geospatial data set.
      operationId: QueryDataset_listLayersWithinDataset
      parameters:
      - description: This parameter corresponds to the Agrimetrics Catalogue dataset
          ID.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDatasetListLayersWithinDatasetResponse'
          description: Successful. Retrived a list of layers for this dataset.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDatasetListLayersWithinDataset403Response'
          description: Forbidden. Check permissions to view this dataset.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDatasetListLayersWithinDataset404Response'
          description: Not found. The datasetId cannot be found.
          x-do-not-generate: true
      summary: List layers within dataset
      tags:
      - Query Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId
      x-accepts: application/json
  /datasets/{datasetId}/layers:
    post:
      description: |
        > :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**

        Ingest a file that has been uploaded to the catalog to create a new layer.
        See [supported ingest formats](doc:supported-ingest-formats) for supported formats.
      operationId: ManageDataset_ingestFileNewLayer
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageDatasetIngestFileNewLayerRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewLayers'
          description: Successful. Layer Created. File ingested correctly and new
            layer created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: File not found.
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Lock contention. Try again later.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Internal server error.
          x-do-not-generate: true
      summary: Ingest file to new layer
      tags:
      - Manage Dataset
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--datasets-datasetId-layers
      x-content-type: application/json
      x-accepts: application/json
  /shapefile:
    post:
      description: |
        > :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**

        Receive a shapefile and return GeoJson for explore page
      operationId: Shapefile_convertToGeoJson
      requestBody:
        content:
          application/zipped-shapefile:
            schema:
              $ref: '#/components/schemas/ShapefileConvertToGeoJsonRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoJSONPolygon'
          description: GeoJSON Polygon
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Dataset not found.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Internal server error.
          x-do-not-generate: true
      summary: Receive a shapefile and return GeoJson
      tags:
      - Shapefile
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--shapefile
      x-content-type: application/zipped-shapefile
      x-accepts: application/json
  /layers/{layerId}:
    delete:
      description: |
        > :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**

        Delete the datastore and layer relating to a zip file on a data set.
      operationId: ManageLayer_deleteLayer
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      responses:
        "204":
          description: Successful. Layer Deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not authorized.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: File not found.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Internal server error.
          x-do-not-generate: true
      summary: Delete layer
      tags:
      - Manage Layer
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--layers-layerId
      x-accepts: application/json
    get:
      description: |
        Get the metadata for a given layer, including the geospatial extent.
      operationId: QueryLayer_metadata
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryLayerMetadataResponse'
          description: Successful. Retreived the geospatial and temporal descriptions
            of the layer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not found. Verify that the layer ID is correct/exists.
          x-do-not-generate: true
      summary: Get layer metadata
      tags:
      - Query Layer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--layers-layerId
      x-accepts: application/json
    patch:
      description: |
        > :warning: **The maximum file size accepted for this endpoint to work is 200 MiB.**

        This endpoint will add a GeoTIFF to an existing GeoTIFF layer.
      operationId: ManageLayer_addGeoTiff
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManageLayerAddGeoTiffRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageLayerAddGeoTiffResponse'
          description: Successful. Tile created on the specified layer.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request. An error occurred while uploading the file.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Forbidden. The request is not authorised.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not found. Verify that the layer ID is correct/exists.
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Lock contention. Try again later.
          x-do-not-generate: true
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Payload too large. File exceeds the maximum size limit.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Internal server error.
          x-do-not-generate: true
      summary: Add a GeoTIFF to a layer
      tags:
      - Manage Layer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--layers-layerId
      x-content-type: multipart/form-data
      x-accepts: application/json
  /layers/{layerId}/files:
    delete:
      description: |
        > :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**

        Remove a file from a layer. When you are deleting a file from a layer, the layer may remain if any other files were ingested onto the same layer. If removing a raster file, provide the fileName query parameter; if removing a vector file, provide the fileUri.
      operationId: ManageLayer_removeFile
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      - explode: true
        in: query
        name: fileUri
        required: false
        schema:
          example: https://api-test.agrimetrics.co.uk/file-management/data-sets/11111111-2222-3333-4444-55555555555/files/example.zip
          format: uri
          pattern: .zip$
          type: string
          x-konfig-original-example: https://api-test.agrimetrics.co.uk/file-management/data-sets/11111111-2222-3333-4444-55555555555/files/example.zip
          x-konfig-generated-schema: konfig-generated-schema-paths--layers-layerId-files-delete-parameters-1-schema
        style: form
      - explode: true
        in: query
        name: filename
        required: false
        schema:
          example: example.tif
          pattern: ".tif[f]?$"
          type: string
          x-konfig-original-example: example.tif
          x-konfig-generated-schema: konfig-generated-schema-paths--layers-layerId-files-delete-parameters-2-schema
        style: form
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Auth error
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: File not found
          x-do-not-generate: true
      summary: Delete a file from a layer
      tags:
      - Manage Layer
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--layers-layerId-files
      x-accepts: application/json
  /layers/{layerId}/ingest:
    post:
      description: |
        > :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**

        Ingest a file that has been uploaded to a data set.
      operationId: ManageLayer_ingestFile
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageLayerIngestFileRequest'
        required: true
      responses:
        "200":
          description: Successful. Tile ingested correctly.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request. File ingest error.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: File not found.
          x-do-not-generate: true
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Lock contention. Try again later.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Internal server error.
          x-do-not-generate: true
      summary: Ingest a file to a layer
      tags:
      - Manage Layer
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--layers-layerId-ingest
      x-content-type: application/json
      x-accepts: application/json
  /layers/{layerId}/style:
    delete:
      description: |
        Delete an SLD style that has been applied to a layer.
      operationId: ManageLayer_removeStyle
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      responses:
        "204":
          description: Style deleted
        "400":
          description: |
            You probably tried to delete the style from an unstyled layer. Please verify the layer ID.
      summary: "Delete the style from a layer, if one has been set"
      tags:
      - Manage Layer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--layers-layerId-style
      x-accepts: application/json
    get:
      description: |
        Get the SLD style that has been applied to a layer.
      operationId: ManageLayer_getStyle
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      responses:
        "200":
          content:
            application/vnd.ogc.sld+xml:
              example: null
          description: Style applied to the layer
        "404":
          description: Query was successful but no style found.
      summary: "Get the style for a layer, if one has been set"
      tags:
      - Manage Layer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--layers-layerId-style
      x-accepts: application/vnd.ogc.sld+xml
    post:
      description: |
        Generate a new style and apply it to the given layer.
      operationId: ManageLayer_autoGenerateStyle
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      - explode: true
        in: query
        name: key
        required: true
        schema:
          description: The column name used for the legend
          example: LU_CODE
          type: string
          x-konfig-original-example: LU_CODE
          x-konfig-generated-schema: konfig-generated-schema-paths--layers-layerId-style-post-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Successful. Layer style has been updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request. Verify that the layer supports this operation
            / temporal specifications / output format
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Forbidden. Check permissions to view this dataset.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Layer not found.
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Internal server error.
          x-do-not-generate: true
      summary: Auto-generate and set layer style
      tags:
      - Manage Layer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--layers-layerId-style
      x-accepts: application/json
    put:
      description: |
        Apply a new style to the given layer. The style must be provided as an SLD file (1.0.0 and 1.1.0 supported).
      operationId: ManageLayer_setStyle
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManageLayerSetStyleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageLayerSetStyleResponse'
          description: Successful. Layer style has been updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request. Verify that the layer supports this operation
            / temporal specifications / output format
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Internal server error.
          x-do-not-generate: true
      summary: Set layer style
      tags:
      - Manage Layer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--layers-layerId-style
      x-content-type: multipart/form-data
      x-accepts: application/json
  /layers/{layerId}/search:
    post:
      description: |
        > :warning: Search geometries are currently limited to areas up to 500 square km.

        Search a specific geometry within a layer. You can optionally specify a time range and/or choose the format of the response (file type, or json).
      operationId: QueryLayer_searchGeometry
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryLayerSearchGeometryRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BinaryFile'
          description: Successful. Retrieved the requested geometry in the default/specified
            format.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request. Verify that the layer supports this operation
            / temporal specifications / output format
          x-do-not-generate: true
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Insufficient credits to complete the request
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Resource not found. Verify that the layer ID is correct/exists.
          x-do-not-generate: true
      summary: Search within layer
      tags:
      - Query Layer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--layers-layerId-search
      x-content-type: application/json
      x-accepts: application/json
  /layers/{layerId}/search/cost:
    post:
      description: |
        Find out the cost of searching a specific geometry within a layer.
      operationId: QueryLayer_calculateCost
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryLayerCalculateCostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostSummary'
          description: Successful. Retrieved the requested geometry in the default/specified
            format.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request. Verify that the layer supports this operation
            / temporal specifications / output format
          x-do-not-generate: true
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Insufficient credits to complete the request
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Resource not found. Verify that the layer ID is correct/exists.
          x-do-not-generate: true
      summary: Calculate query cost
      tags:
      - Query Layer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--layers-layerId-search-cost
      x-content-type: application/json
      x-accepts: application/json
  /layers/{layerId}/search/statistics:
    post:
      description: |
        > :warning: Search geometries are currently limited to areas up to 500 square km.

        Calculates basic statistics of the raster layer within the specified geometry (and optionally time).
      operationId: QueryLayer_calculateStatisticsWithinGeometry
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryLayerCalculateStatisticsWithinGeometryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistics'
          description: Successful. Retrieved the requested statistics for the specified
            geometry
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request. Verify that the layer supports this operation
            / temporal specifications.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Resource not found. Verify that the layer ID is correct/exists.
          x-do-not-generate: true
      summary: Get layer statistics
      tags:
      - Query Layer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--layers-layerId-search-statistics
      x-content-type: application/json
      x-accepts: application/json
  /serviceDefinition:
    post:
      description: |
        > :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**

        Create new service definition within a data set.
      operationId: ServiceDefinition_createNewDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDefinition'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDefinitionResponse'
          description: Successful. Created new service definition.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request. Verify that the format of the service definition
            is correct.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not authorised.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not found.
          x-do-not-generate: true
      summary: Create new service definition
      tags:
      - Service Definition
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--serviceDefinition
      x-content-type: application/json
      x-accepts: application/json
  /serviceDefinition/{layerId}:
    delete:
      description: |
        > :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**

        Delete service definition given layer ID
      operationId: ServiceDefinition_deleteById
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Auth error
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Service definition not found
          x-do-not-generate: true
      summary: Delete service definition
      tags:
      - Service Definition
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--serviceDefinition-layerId
      x-accepts: application/json
    get:
      description: |
        > :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**

        Get the service definition for a given layer ID
      operationId: ServiceDefinition_getByLayerId
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDefinitionResponse'
          description: Successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Auth error
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Service definition not found
          x-do-not-generate: true
      summary: Get service definition
      tags:
      - Service Definition
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--serviceDefinition-layerId
      x-accepts: application/json
    patch:
      description: |
        > :warning: **This is an Agrimetrics internal operation. It relies on information which is not exposed externally.**

        Update an existing service definition with billing and coordinates reference system metadata.
      operationId: ServiceDefinition_updateExistingDefinition
      parameters:
      - explode: false
        in: path
        name: layerId
        required: true
        schema:
          $ref: '#/components/schemas/LayerId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDefinitionUpdateExistingDefinitionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDefinitionResponse'
          description: Successful. Edited service definition.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request. Verify that the format of the service definition
            is correct.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Auth error
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Service definition not found
          x-do-not-generate: true
      summary: Update service definition
      tags:
      - Service Definition
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--serviceDefinition-layerId
      x-content-type: application/json
      x-accepts: application/json
  /data-requests:
    get:
      description: |
        Query the given users data access requests
      operationId: DataRequest_listUserAccessRequests
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRequestResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that the JWT has a valid user ID on it
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not authenticated
          x-do-not-generate: true
      summary: lists a users data requests
      tags:
      - dataRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-requests
      x-accepts: application/json
    post:
      description: Create a single access request for an authenticated user
      operationId: DataRequest_createSingleAccessRequest
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRequestCreateSingleAccessRequestResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that the JWT has a valid user ID on it
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not authenticated
          x-do-not-generate: true
      summary: create a single access request
      tags:
      - dataRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--data-requests
      x-content-type: multipart/form-data
      x-accepts: application/json
  /data-requests/{requestId}:
    get:
      description: Returns the users requested data
      operationId: DataRequest_getRequestedData
      parameters:
      - explode: false
        in: path
        name: requestId
        required: true
        schema:
          $ref: '#/components/schemas/RequestId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRequestDetails'
          description: Result
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that the JWT has a valid user ID on it
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not authenticated
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has been approved for
            access.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found
          x-do-not-generate: true
      summary: gets the data for the approved request
      tags:
      - dataRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-requests-requestId
      x-accepts: application/json
    patch:
      description: |
        Allows updating of the given data request |
        - For example: cancelling the request
      operationId: DataRequest_updateRequest
      parameters:
      - explode: false
        in: path
        name: requestId
        required: true
        schema:
          $ref: '#/components/schemas/RequestId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestUpdateRequestRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRequestUpdateRequestResponse'
          description: Result
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that the JWT has a valid user ID on it
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not authenticated
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has been approved for
            access.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      summary: updates a data request
      tags:
      - dataRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--data-requests-requestId
      x-content-type: application/json
      x-accepts: application/json
  /data-requests/{uniqueLinkId}/approve:
    get:
      description: Grants access to a user on a given data request
      operationId: DataRequest_grantUserAccess
      parameters:
      - explode: false
        in: path
        name: uniqueLinkId
        required: true
        schema:
          $ref: '#/components/schemas/uniqueLinkId'
        style: simple
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request
          x-do-not-generate: true
        "404":
          description: Data Access request not found
      summary: approve data access
      tags:
      - dataRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-requests-uniqueLinkId-approve
      x-accepts: application/json
  /data-requests/{uniqueLinkId}/reject:
    get:
      description: Rejects access to a user on a given data request
      operationId: DataRequest_rejectUserAccess
      parameters:
      - explode: false
        in: path
        name: uniqueLinkId
        required: true
        schema:
          $ref: '#/components/schemas/uniqueLinkId'
        style: simple
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request
          x-do-not-generate: true
        "404":
          description: Data Access request not found
      summary: reject data access
      tags:
      - dataRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-requests-uniqueLinkId-reject
      x-accepts: application/json
  /data-requests/{uniqueLinkId}/geometry:
    get:
      description: Returns the geometry of the data request as GeoJSON
      operationId: DataRequest_getGeoJsonGeometry
      parameters:
      - explode: false
        in: path
        name: uniqueLinkId
        required: true
        schema:
          $ref: '#/components/schemas/uniqueLinkId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoJSONPolygon'
          description: GeoJSON Polygon
        "404":
          description: Data Access request not found
      summary: Get geometry for data request as GeoJSON
      tags:
      - dataRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-requests-uniqueLinkId-geometry
      x-accepts: application/json
  /data-requests/{requestId}/download:
    get:
      description: "Once a data access request has been approved, this endpoint returns\
        \ the data requested."
      operationId: DataRequest_getResults
      parameters:
      - explode: false
        in: path
        name: requestId
        required: true
        schema:
          $ref: '#/components/schemas/RequestId'
        style: simple
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/DataRequestGetResultsResponse'
            application/gml+xml; version=3.2:
              schema:
                $ref: '#/components/schemas/DataRequestGetResults200Response'
            application/vnd.google-earth.kml+xml:
              schema:
                $ref: '#/components/schemas/DataRequestGetResults200Response'
            application/zipped-shapefile:
              schema:
                $ref: '#/components/schemas/DataRequestGetResults200Response'
            application/x.gdb+zip:
              schema:
                $ref: '#/components/schemas/DataRequestGetResults200Response'
            application/x.mid-mif+zip:
              schema:
                $ref: '#/components/schemas/DataRequestGetResults200Response'
            application/x.tab+zip:
              schema:
                $ref: '#/components/schemas/DataRequestGetResults200Response'
            application/dxf:
              schema:
                $ref: '#/components/schemas/DataRequestGetResults200Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad request.
          x-do-not-generate: true
        "401":
          description: Authentication required.
        "403":
          description: The request has not been approved yet OR it has been rejected
            OR you are not authorised for this data access request.
        "404":
          description: No request found by that ID.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRequestGetResults406Response'
          description: Not acceptable. Cannot produce output type.
          x-do-not-generate: true
        "410":
          description: This data access request has expired.
      summary: Get the results of your data request
      tags:
      - dataRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-requests-requestId-download
      x-accepts: application/json
  /datasets/swagger-ui/{swaggerFile}:
    get:
      description: Get swagger files
      operationId: Ogcapi_getSwaggerFile
      parameters:
      - explode: false
        in: path
        name: swaggerFile
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security: []
      summary: OGC-API-Features Swagger
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-swagger-ui-swaggerFile
      x-accepts: application/json
  /datasets/apicss/{cssFile}:
    get:
      description: Get CSS files
      operationId: Ogcapi_getStyleForCssFile
      parameters:
      - explode: false
        in: path
        name: cssFile
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      security: []
      summary: OGC-API CSS
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-apicss-cssFile
      x-accepts: application/json
  /datasets/{datasetId}/wms:
    get:
      description: |
        Query the given layer with the OpenGIS® Web Map Service interface standard
      operationId: Wms_queryLayerWithOpenGIS
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WmsQueryLayerWithOpenGisResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via WMS.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: Web Map Service (WMS) query
      tags:
      - WMS
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wms
      x-accepts: application/json
    head:
      description: |
        Query the given data set with the OpenGIS® Web Map Service interface standard
      operationId: Wms_queryWithOpenGis
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WmsQueryWithOpenGisResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via WMS.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: Web Maps Service (WMS) query
      tags:
      - WMS
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-head--datasets-datasetId-wms
      x-accepts: application/json
  /datasets/{datasetId}/wmts:
    get:
      description: |
        Query the given data set with the OpenGIS® Web Map Tile Serice interface standard
      operationId: Wmts_queryDataSetWmts
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WmtsQueryDataSetWmtsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via WMTS.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: Web Map Tile Service (WMTS) query
      tags:
      - WMTS
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wmts
      x-accepts: application/json
  /datasets/{datasetId}/wfs:
    get:
      description: |
        Query the given data set with the OpenGIS® Web Feature Service interface standard
      operationId: Wfs_queryDataWithOpenGis
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WfsQueryDataWithOpenGisResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via WFS.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: Web Feature Service (WFS) query
      tags:
      - WFS
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wfs
      x-accepts: application/json
    head:
      description: |
        Query the given data set with the OpenGIS® Web Feature Service interface standard
      operationId: Wfs_queryDataOpenGis
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WfsQueryDataOpenGisResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via WFS.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: Web Feature Service (WFS) query
      tags:
      - WFS
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-head--datasets-datasetId-wfs
      x-accepts: application/json
    post:
      description: |
        Query the given data set with the OpenGIS® Web Feature Service interface standard
      operationId: Wfs_queryDataOpenGis
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/WfsQueryDataOpenGisRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WfsQueryDataOpenGis200Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via WMS.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: Web Feature Service (WFS) query
      tags:
      - WFS
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--datasets-datasetId-wfs
      x-content-type: text/xml
      x-accepts: application/json
  /datasets/{datasetId}/ogc/features/v1:
    get:
      description: |
        Query the given data set with the OGC-API Featuresinterface standard
      operationId: Ogcapi_featuresQuery
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcapiFeaturesQueryResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via OGC
            API - Features.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC-API-Features query
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1
      x-accepts: application/json
  /datasets/{datasetId}/ogc/features/v1/openapi:
    get:
      description: |
        Query the given data set with the OGC-API Featuresinterface standard
      operationId: Ogcapi_queryFeaturesOpenapi
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcapiQueryFeaturesOpenapiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via OGC
            API - Features.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC-API-Features query
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-openapi
      x-accepts: application/json
  /datasets/{datasetId}/ogc/features/v1/conformance:
    get:
      description: |
        Query the given data set with the OGC-API Featuresinterface standard
      operationId: Ogcapi_featuresQueryConformance
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcapiFeaturesQueryConformanceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via OGC
            API - Features.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC-API-Features query
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-conformance
      x-accepts: application/json
  /datasets/{datasetId}/ogc/features/v1/functions:
    get:
      description: |
        Query the given data set with the OGC-API Featuresinterface standard
      operationId: Ogcapi_queryFeaturesFunction
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcapiQueryFeaturesFunctionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via OGC
            API - Features.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC-API-Features query
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-functions
      x-accepts: application/json
  /datasets/{datasetId}/ogc/features/v1/collections:
    get:
      description: |
        Query the given data set with the OGC-API Featuresinterface standard
      operationId: Ogcapi_queryFeaturesCollection
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcapiQueryFeaturesCollectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via OGC
            API - Features.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC-API-Features query
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-collections
      x-accepts: application/json
  /datasets/{datasetId}/ogc/features/v1/collections/{collectionId}:
    get:
      description: |
        Query the given data set with the OGC-API Featuresinterface standard
      operationId: Ogcapi_featuresQueryOgc
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcapiFeaturesQueryOgcResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via OGC
            API - Features.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC-API-Features query
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-collections-collectionId
      x-accepts: application/json
  /datasets/{datasetId}/ogc/features/v1/collections/{collectionId}/queryables:
    get:
      description: |
        Query the given data set with the OGC-API Featuresinterface standard
      operationId: Ogcapi_featuresQueryables
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcapiFeaturesQueryablesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via OGC
            API - Features.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC-API-Features query
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-collections-collectionId-queryables
      x-accepts: application/json
  /datasets/{datasetId}/ogc/features/v1/collections/{collectionId}/items:
    get:
      description: |
        Query the given data set with the OGC-API Featuresinterface standard
      operationId: Ogcapi_queryFeaturesCollectionItems
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcapiQueryFeaturesCollectionItemsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via OGC
            API - Features.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC-API-Features query
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-collections-collectionId-items
      x-accepts: application/json
  /datasets/{datasetId}/ogc/features/v1/collections/{collectionId}/items/{featureId}:
    get:
      description: |
        Query the given data set with the OGC-API Featuresinterface standard
      operationId: Ogcapi_featuresQuery
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcapiFeaturesQuery200Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via OGC
            API - Features.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC-API-Features query
      tags:
      - OGCAPI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-collections-collectionId-items-featureId
      x-accepts: application/json
  /datasets/{datasetId}/ogc/tiles/v1:
    get:
      description: |
        Query the given data set with OGC API Tiles standard
      operationId: OgcApiTiles_queryTilesV1
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcApiTilesQueryTilesV1Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has an accessible OGC
            API Tiles service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC API Tiles query
      tags:
      - OGC API Tiles
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1
      x-accepts: application/json
  /datasets/{datasetId}/ogc/tiles/v1/conformance:
    get:
      description: |
        Query the given data set with OGC API Tiles standard
      operationId: OgcApiTiles_getConformance
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcApiTilesGetConformanceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has an accessible OGC
            API Tiles service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC API Tiles query
      tags:
      - OGC API Tiles
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-conformance
      x-accepts: application/json
  /datasets/{datasetId}/ogc/tiles/v1/collections:
    get:
      description: |
        Query the given data set with OGC API Tiles standard
      operationId: OgcApiTiles_queryCollections
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcApiTilesQueryCollectionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has an accessible OGC
            API Tiles service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC API Tiles query
      tags:
      - OGC API Tiles
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-collections
      x-accepts: application/json
  /datasets/{datasetId}/ogc/tiles/v1/collections/{collectionId}:
    get:
      description: |
        Query the given data set with OGC API Tiles standard
      operationId: OgcApiTiles_queryCollectionById
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcApiTilesQueryCollectionByIdResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has an accessible OGC
            API Tiles service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC API Tiles query
      tags:
      - OGC API Tiles
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-collections-collectionId
      x-accepts: application/json
  /datasets/{datasetId}/ogc/tiles/v1/collections/{collectionId}/queryables:
    get:
      description: |
        Query the given data set with OGC API Tiles standard
      operationId: OgcApiTiles_queryCollectionQueryables
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcApiTilesQueryCollectionQueryablesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has an accessible OGC
            API Tiles service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC API Tiles query
      tags:
      - OGC API Tiles
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-collections-collectionId-queryables
      x-accepts: application/json
  /datasets/{datasetId}/ogc/tiles/v1/collections/{collectionId}/tiles/{tileMatrixSetId}:
    get:
      description: |
        Query the given data set with OGC API Tiles standard
      operationId: OgcApiTiles_getTilesCollection
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
        style: simple
      - allowReserved: true
        explode: false
        in: path
        name: tileMatrixSetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcApiTilesGetTilesCollectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has an accessible OGC
            API Tiles service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC API Tiles query
      tags:
      - OGC API Tiles
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-collections-collectionId-tiles-tileMatrixSetId
      x-accepts: application/json
  /datasets/{datasetId}/ogc/tiles/v1/collections/{collectionId}/map/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}:
    get:
      description: |
        Query the given data set with OGC API Tiles standard
      operationId: OgcApiTiles_getQueryTilesCollection
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
        style: simple
      - allowReserved: true
        explode: false
        in: path
        name: tileMatrixSetId
        required: true
        schema:
          type: string
        style: simple
      - allowReserved: true
        explode: false
        in: path
        name: tileMatrix
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tileRow
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: tileCol
        required: true
        schema:
          type: integer
        style: simple
      - allowReserved: true
        explode: true
        in: query
        name: f
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcApiTilesGetQueryTilesCollectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has an accessible OGC
            API Tiles service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC API Tiles query
      tags:
      - OGC API Tiles
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-collections-collectionId-map-tiles-tileMatrixSetId-tileMatrix-tileRow-tileCol
      x-accepts: application/json
  /datasets/{datasetId}/ogc/tiles/v1/tileMatrixSets:
    get:
      description: |
        Query the given data set with OGC API Tiles standard
      operationId: OgcApiTiles_queryTileMatrixSets
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcApiTilesQueryTileMatrixSetsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has an accessible OGC
            API Tiles service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC API Tiles query
      tags:
      - OGC API Tiles
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-tileMatrixSets
      x-accepts: application/json
  /datasets/{datasetId}/ogc/tiles/v1/tileMatrixSets/{tileMatrixSetId}:
    get:
      description: |
        Query the given data set with OGC API Tiles standard
      operationId: OgcApiTiles_queryTileMatrixSets
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - allowReserved: true
        explode: false
        in: path
        name: tileMatrixSetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OgcApiTilesQueryTileMatrixSets200Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has an accessible OGC
            API Tiles service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: OGC API Tiles query
      tags:
      - OGC API Tiles
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-tileMatrixSets-tileMatrixSetId
      x-accepts: application/json
  /datasets/{datasetId}/wmts/rest/{layerName}/{style}/tilejson/{imageFormat}:
    get:
      description: |
        Query the given data set with theWMTS standard
      operationId: WmtsRest_queryTilejsonImageFormat
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: layerName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: style
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: imageFormat
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WmtsRestQueryTilejsonImageFormatResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has accessible WMTS
            service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: WMTS Service query
      tags:
      - WMTS REST
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wmts-rest-layerName-style-tilejson-imageFormat
      x-accepts: application/json
  /datasets/{datasetId}/wmts/rest/{layerName}/{style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}:
    get:
      description: |
        Query the given data set with theWMTS standard
      operationId: WmtsRest_queryTileMatrixSet
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: layerName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: style
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: TileMatrixSet
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: TileMatrix
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: TileRow
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - explode: false
        in: path
        name: TileCol
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - explode: true
        in: query
        name: format
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WmtsRestQueryTileMatrixSetResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has accessible WMTS
            service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: WMTS Service query
      tags:
      - WMTS REST
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wmts-rest-layerName-style-TileMatrixSet-TileMatrix-TileRow-TileCol
      x-accepts: application/json
  /datasets/{datasetId}/wmts/rest/{layerName}/{style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}/{J}/{I}:
    get:
      description: |
        Query the given data set with theWMTS standard
      operationId: WmtsRest_serviceQuery
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - explode: false
        in: path
        name: layerName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: style
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: TileMatrixSet
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: TileMatrix
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: TileRow
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - explode: false
        in: path
        name: TileCol
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      - explode: false
        in: path
        name: J
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: I
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: format
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WmtsRestServiceQueryResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set has accessible WMTS
            service.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: WMTS Service query
      tags:
      - WMTS REST
      x-allow-unknown-query-parameters: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wmts-rest-layerName-style-TileMatrixSet-TileMatrix-TileRow-TileCol-J-I
      x-accepts: application/json
  /datasets/{datasetId}/wcs:
    get:
      description: |
        Query the given data set with the OpenGIS® Web Coverage Serice interface standard
      operationId: Wcs_queryData
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WcsQueryDataResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via WCS.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: Web Coverage Service (WCS) query
      tags:
      - WCS
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wcs
      x-accepts: application/json
    head:
      description: |
        Query the given data set with the OpenGIS® Web Coverage Service interface standard
      operationId: Wcs_queryData
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WcsQueryData200Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via WCS.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: Web Coverage Service (WMS) query
      tags:
      - WCS
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-head--datasets-datasetId-wcs
      x-accepts: application/json
  /rest/services/{datasetId}/{paramOne}:
    get:
      description: |
        Query the given dataset using ESRI Rest Services
      operationId: Esri_restServiceQuery
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: Additional path element
        explode: false
        in: path
        name: paramOne
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EsriRestServiceQueryResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via REST
            endpoint.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: ESRI REST Service query
      tags:
      - ESRI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--rest-services-datasetId-paramOne
      x-accepts: application/json
  /rest/services/{datasetId}/{paramOne}/{paramTwo}:
    get:
      description: |
        Query the given dataset using ESRI Rest Services
      operationId: Esri_restServiceQuery
      parameters:
      - explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: Additional path element
        explode: false
        in: path
        name: paramOne
        required: true
        schema:
          type: string
        style: simple
      - description: Additional path element
        explode: false
        in: path
        name: paramTwo
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EsriRestServiceQuery200Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Bad Request. Verify that this data set has a geospatial layer.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Access Error. Verify that this data set is accessible via REST
            endpoint.
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestError'
          description: Not Found Error.
          x-do-not-generate: true
      security: []
      summary: ESRI REST Service query
      tags:
      - ESRI
      x-allow-unknown-query-parameters: true
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--rest-services-datasetId-paramOne-paramTwo
      x-accepts: application/json
  /categories:
    get:
      description: List all the valid categories of datasets.
      operationId: Dataset_listValidCategories
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
          description: List of categories
      security: []
      summary: List all the valid categories of datasets.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--categories
      x-accepts: application/json
  /tags:
    get:
      description: List all the valid tags that can be set on a data set.
      operationId: Dataset_listValidTags
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetListValidTagsResponse'
          description: List of tags the user can use
      security: []
      summary: List all the valid tags that can be set on a data set.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tags
      x-accepts: application/json
  /linked-data/concepts:
    get:
      description: List All Concepts Available in Agrimetrics Ontology Graph.
      operationId: Graph_listConcepts
      responses:
        "200":
          description: List of all concepts
      security: []
      summary: List all concepts in linked data graph.
      tags:
      - Graph
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--linked-data-concepts
      x-accepts: application/json
  /data-sets:
    get:
      description: List all data sets.
      operationId: DataSet_listAllDataSets
      parameters:
      - description: List of data set ids
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            example: 52178729-7b5a-4e34-8989-3d2fc8e7a371
            type: string
            x-konfig-original-example: 52178729-7b5a-4e34-8989-3d2fc8e7a371
            x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-0-schema-items
          type: array
        style: form
      - allowReserved: true
        description: The creator of the data set.
        explode: true
        in: query
        name: creator
        required: false
        schema:
          items:
            example: Agrimetrics
            type: string
            x-konfig-original-example: Agrimetrics
            x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-1-schema-items
          type: array
        style: form
      - allowReserved: true
        deprecated: true
        description: Tags describing the data set. keywords is deprecated - use tags
          instead
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          items:
            $ref: '#/components/schemas/TagValue'
          type: array
        style: form
      - allowReserved: true
        description: Tags describing the data set.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/TagValue'
          type: array
        style: form
      - deprecated: true
        description: "Note - This feature will no longer be available as we are in\
          \ the process of moving to a different backend and will soon be removed.\
          \ If provided, include data sets that have been tagged with concepts that\
          \ are related to the values provided in the `tags` parameter. If not provided,\
          \ only include data sets tagged with exact matches."
        explode: true
        in: query
        name: tagRelationship
        required: false
        schema:
          $ref: '#/components/schemas/Relationship'
        style: form
      - description: Indicates the type of data
        explode: true
        in: query
        name: category
        required: false
        schema:
          items:
            $ref: '#/components/schemas/CategoryValue'
          type: array
        style: form
      - allowReserved: true
        description: The region the data is applicable to.
        explode: true
        in: query
        name: spatialCoverage
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SpatialCoverage'
          type: array
        style: form
      - allowReserved: true
        deprecated: true
        description: Note - Use extendedText. This field has been deprecated. Free
          text search for data sets.
        explode: true
        in: query
        name: text
        required: false
        schema:
          example: Weather
          type: string
          x-konfig-original-example: Weather
          x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-7-schema
        style: form
      - allowReserved: true
        description: Free text search for data sets matching title; summary; description;
          tags; concepts; and source.
        explode: true
        in: query
        name: extendedText
        required: false
        schema:
          example: Soil
          type: string
          x-konfig-original-example: Soil
          x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-8-schema
        style: form
      - description: "Only show datasets accessible by these identities. Can be 'PUBLIC',\
          \ a user ID or an organisation ID."
        explode: true
        in: query
        name: identities
        required: false
        schema:
          items:
            example: PUBLIC
            type: string
            x-konfig-original-example: PUBLIC
            x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-9-schema-items
          type: array
        style: form
      - description: Defines whether to return only featured data sets
        explode: true
        in: query
        name: onlyFeatured
        required: false
        schema:
          type: boolean
        style: form
      - description: Defines whether my editable data sets should be shown.
        explode: true
        in: query
        name: showEditable
        required: false
        schema:
          type: boolean
        style: form
      - description: Defines whether hidden data sets should be shown.
        explode: true
        in: query
        name: showHidden
        required: false
        schema:
          type: boolean
        style: form
      - description: Set the page number. Should not be specified in conjunction with
          offset or limit.
        explode: true
        in: query
        name: pageNum
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: Set the page size. Should not be specified in conjunction with
          offset or limit.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: Set the pagination offset. Should not be specified in conjunction
          with pageNum or pageSize.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: "Choose whether to search across all metadata on a data set,\
          \ or just the title."
        explode: true
        in: query
        name: searchType
        required: false
        schema:
          enum:
          - title
          - all
          type: string
        style: form
      - description: Set the pagination limit. Should not be specified in conjunction
          with pageNum or pageSize.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - deprecated: true
        description: Note - This feature will no longer be available once we move
          to a different backend. "Format response to convert any new concepts to
          legacy concepts"
        explode: true
        in: query
        name: legacyConcepts
        required: false
        schema:
          type: boolean
        style: form
      - description: Criterion by which to order the results
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - title
          - title-descending
          - relevance
          type: string
        style: form
      - description: The private data exchange for which to retrieve records
        explode: true
        in: query
        name: exchange
        required: false
        schema:
          $ref: '#/components/schemas/Exchange'
        style: form
      - allowReserved: true
        explode: true
        in: query
        name: metadataStandardName
        required: false
        schema:
          items:
            example: Environment Agency Metadata Profile
            type: string
            x-konfig-original-example: Environment Agency Metadata Profile
            x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-21-schema-items
          type: array
        style: form
      - explode: true
        in: query
        name: draftStatus
        required: false
        schema:
          items:
            $ref: '#/components/schemas/DraftStatus'
          type: array
        style: form
      - explode: true
        in: query
        name: publishedStatus
        required: false
        schema:
          items: {}
          type: array
        style: form
      - allowReserved: true
        explode: true
        in: query
        name: licence
        required: false
        schema:
          items:
            example: Open Government Licence
            type: string
            x-konfig-original-example: Open Government Licence
            x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-24-schema-items
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSets'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/DataSetListAllDataSetsResponse'
          description: List all data sets.
      security: []
      summary: List all data sets.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-sets
      x-accepts: application/json
    post:
      description: Creates a single catalog entry.
      operationId: Dataset_createSingleCatalogEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetCreateSingleCatalogEntryRequest'
        description: The data set to create.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryUpdateResponse'
          description: Creates a single catalog entry for a data set.
      security: []
      summary: Create a single data set catalog entry.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--data-sets
      x-content-type: application/json
      x-accepts: application/json
  /data-sets/{dataSetId}:
    delete:
      description: Delete a single Data Set
      operationId: Dataset_deleteSingleDataSet
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetDeleteSingleDataSetResponse'
          description: Response if deleted properly
      security: []
      summary: Delete a Data Set
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--data-sets-dataSetId
      x-accepts: application/json
    get:
      description: Get a single data set catalog entry.
      operationId: Dataset_getSingleCatalogEntry
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatasetGetSingleCatalogEntryResponse'
          description: Returns a single catalog entry from catalog.
      security: []
      summary: Get a single data set catalog entry.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId
      x-accepts: application/json
    patch:
      description: Updates a single catalog entry.
      operationId: Dataset_updateSingleCatalogEntry
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSetPatch'
        description: The updated data set information.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
          description: Updates a single catalog entry for a data set.
      security: []
      summary: Update a single data set catalog entry.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--data-sets-dataSetId
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Updates a single catalog entry.
      operationId: Dataset_updateSingleEntry
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSet'
        description: The updated data set information.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
          description: Updates a single catalog entry for a data set.
      security: []
      summary: Update a single data set catalog entry.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--data-sets-dataSetId
      x-content-type: application/json
      x-accepts: application/json
  /data-sets/{dataSetId}/draft:
    delete:
      description: Discards the draft changes on a data set catalog entry.
      operationId: Dataset_discardDraftChanges
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          description: Draft changes were discarded.
      security: []
      summary: Discards the draft changes on a data set catalog entry.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--data-sets-dataSetId-draft
      x-accepts: application/json
    get:
      description: Get the draft changes on a data set catalog entry.
      operationId: Dataset_getDraftChanges
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
          description: Returns the draft changes on a data set.
      security: []
      summary: Get the draft changes on a data set catalog entry.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId-draft
      x-accepts: application/json
  /data-sets/{dataSetId}/draft-status:
    put:
      description: Set the draft status for the data set catalog entry.
      operationId: Status_setDraftStatus
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusSetDraftStatusRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryUpdateResponse'
          description: Updates a single catalog entry for a data set.
      security: []
      summary: Set the draft status for the data set catalog entry.
      tags:
      - Status
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--data-sets-dataSetId-draft-status
      x-content-type: application/json
      x-accepts: application/json
  /data-sets/{dataSetId}/fileDataset:
    get:
      description: Get file dataset id from dataset
      operationId: Dataset_getFileDatasetId
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetGetFileDatasetIdResponse'
          description: Returns the file management Id for this dataset
      security: []
      summary: Get file dataset id from dataset
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId-fileDataset
      x-accepts: application/json
    post:
      description: |
        Create and attach file dataset. If the file dataset already exists, this will not do anything. Note this should usually be automatically created when creating a catalogue entry.
      operationId: Dataset_createFileDataset
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetCreateFileDatasetResponse'
          description: Returns the file management Id for this dataset
      security: []
      summary: Create and attach file dataset
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--data-sets-dataSetId-fileDataset
      x-accepts: application/json
  /data-sets/{dataSetId}/access:
    get:
      description: Gets the entitlements on a data set.
      operationId: Dataset_getEntitlements
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetGetEntitlementsResponse'
          description: The access set on the data set
      security: []
      summary: Get the entitlements on a data set.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId-access
      x-accepts: application/json
    patch:
      description: Set the entitlements and on a data set for all identities.
      operationId: Dataset_setEntitlements
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetSetEntitlementsRequest'
        description: The access to update.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSetEntitlementsResponse'
          description: The access set on the data set
      security: []
      summary: Set the entitlements and on a data set for all identities.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--data-sets-dataSetId-access
      x-content-type: application/json
      x-accepts: application/json
  /data-sets/{dataSetId}/validationReport:
    get:
      description: Get the schematron validation report using the data sets validation
        profile. Throws an error if there is no validation profile
      operationId: Dataset_getValidationReport
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetGetValidationReportResponse'
          description: The image for the data set.
      summary: Get the schematron validation report using the data sets validation
        profile
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId-validationReport
      x-accepts: application/json
  /data-sets/{dataSetId}/draft/validationReport:
    get:
      description: Get the schematron validation report using the data sets validation
        profile. Throws an error if there is no validation profile
      operationId: Dataset_getValidationReport
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetGetValidationReport200Response'
          description: The image for the data set.
      summary: Get the schematron validation report using the data sets validation
        profile
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId-draft-validationReport
      x-accepts: application/json
  /images/{imageType}/{imageId}:
    get:
      description: Get an image referenced on a data set. This will always return
        the raw image data.
      operationId: Image_getRawImage
      parameters:
      - explode: false
        in: path
        name: imageType
        required: true
        schema:
          enum:
          - custom
          - unsplash
          type: string
        style: simple
      - explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      - description: "Whether to provide a thumbnail image. If set to true and no\
          \ thumbnail exists, the full image will be returned"
        explode: true
        in: query
        name: thumbnail
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          example: "false"
          type: string
          x-konfig-original-example: "false"
          x-konfig-generated-schema: konfig-generated-schema-paths--images-imageType-imageId-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: The image for the data set.
      security: []
      summary: Get an image used in the catalogue.
      tags:
      - Image
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--images-imageType-imageId
      x-accepts: application/json
  /data-sets/{dataSetId}/image:
    put:
      description: Set the image for a data set. Can either be an image upload a plain
        text string representing the unsplash image id.
      operationId: Dataset_setImage
      parameters:
      - explode: false
        in: path
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          description: The imageUrl for the data set.
      security: []
      summary: Set the image for a data set.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--data-sets-dataSetId-image
      x-accepts: application/json
  /access-requests:
    get:
      operationId: AccessRequest_list
      parameters:
      - explode: true
        in: query
        name: dataSetId
        required: false
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: form
      - explode: true
        in: query
        name: requestingEntityId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          description: The outstanding access requests for the data set.
        "400":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessRequestListResponse'
          description: This request is not supported
          x-do-not-generate: true
      security: []
      tags:
      - AccessRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--access-requests
      x-accepts: application/xml
    post:
      operationId: AccessRequest_createNewRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequestCreateNewRequestRequest'
      responses:
        "200":
          description: The outstanding access requests for the data set.
        "400":
          content:
            application/xml: {}
          description: This request is not supported
      security: []
      tags:
      - AccessRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--access-requests
      x-content-type: application/json
      x-accepts: application/xml
  /access-requests/{requestId}:
    delete:
      operationId: AccessRequest_deleteRequestById
      parameters:
      - explode: false
        in: path
        name: requestId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: dataSetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: form
      - explode: true
        in: query
        name: accepted
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          description: Dismiss access requests for the data set.
      security: []
      tags:
      - AccessRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--access-requests-requestId
      x-accepts: application/json
  /import:
    post:
      operationId: Import_dataSets
      requestBody:
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              $ref: '#/components/schemas/ImportDataSetsRequest'
      responses:
        "200":
          description: Import was successful.
      tags:
      - Import
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--import
      x-content-type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      x-accepts: application/json
  /templates:
    get:
      description: List all templates you have permission to view.
      operationId: Template_listPermissionsToView
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateListPermissionsToViewResponse'
          description: The template result set.
      summary: List all templates you have permission to view.
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--templates
      x-accepts: application/json
    post:
      description: Creates a single template that can be used to create similar catalogue
        entries.
      operationId: Template_createCatalogEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSetTemplateMetadata'
        description: The data set to create.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryUpdateResponse'
          description: Creates a single catalog entry for a template.
      summary: Create a new template for creating catalogue entries.
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--templates
      x-content-type: application/json
      x-accepts: application/json
  /templates/{templateId}:
    delete:
      operationId: Template_deleteSpecificTemplate
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryUpdateResponse'
          description: Creates a single catalog entry for a data set.
      security: []
      summary: Delete a specific template
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--templates-templateId
      x-accepts: application/json
    get:
      operationId: Template_getSpecificTemplate
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetTemplateEntity'
          description: Get template
      security: []
      summary: Get a specific template
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--templates-templateId
      x-accepts: application/json
    patch:
      operationId: Template_updateTemplateItem
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSetTemplatePatchMetadata'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetTemplateEntity'
          description: Updates a Template entry
      security: []
      summary: Update a template
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--templates-templateId
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Template_updateTemplateItem
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSetTemplateMetadata'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetTemplateEntity'
          description: Updates a Template entry
      security: []
      summary: Update a template
      tags:
      - Template
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--templates-templateId
      x-content-type: application/json
      x-accepts: application/json
  /harvest/{group}/csw:
    get:
      operationId: Harvest_xmlDataOnGroup
      parameters:
      - explode: false
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/GroupCode'
        style: simple
      - explode: true
        in: query
        name: service
        required: false
        schema:
          description: Name of the service being called
          enum:
          - CSW
          type: string
        style: form
      - explode: true
        in: query
        name: request
        required: false
        schema:
          description: Name of the operation being called
          enum:
          - GetRecords
          - GetRecordById
          - GetCapabilities
          type: string
        style: form
      - explode: true
        in: query
        name: version
        required: false
        schema:
          description: Version of the operation being called
          type: string
        style: form
      - explode: true
        in: query
        name: startPosition
        required: false
        schema:
          default: 1
          description: which record position the catalog should start generating output
          example: 1
          minimum: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--harvest-group-csw-parameters-4-schema
        style: form
      - explode: true
        in: query
        name: maxRecords
        required: false
        schema:
          default: 10
          description: the maximum number of records that should be returned from
            the result set of a query
          example: 10
          minimum: 1
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-paths--harvest-group-csw-parameters-5-schema
        style: form
      - explode: true
        in: query
        name: id
        required: false
        schema:
          description: A list of record identifiers for the records that a CSW shall
            return to the client
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: outputSchema
        required: false
        schema:
          description: "This parameter does not affect the response, it only exists\
            \ to satisfy CSW format"
          enum:
          - http://www.isotc211.org/2005/gmd
          type: string
        style: form
      - explode: true
        in: query
        name: elementsetname
        required: false
        schema:
          description: "This parameter does not affect the response, it only exists\
            \ to satisfy CSW format"
          enum:
          - full
          - brief
          - summary
          type: string
        style: form
      - explode: true
        in: query
        name: outputFormat
        required: false
        schema:
          description: "This parameter does not affect the response, it only exists\
            \ to satisfy CSW format"
          enum:
          - application/xml
          type: string
        style: form
      - explode: true
        in: query
        name: typeNames
        required: false
        schema:
          description: "This parameter does not affect the response, it only exists\
            \ to satisfy CSW format"
          enum:
          - gmd:MD_Metadata
          - csw:Record
          type: string
        style: form
      - explode: true
        in: query
        name: resultType
        required: false
        schema:
          description: "This parameter does not affect the response, it only exists\
            \ to satisfy CSW format"
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/HarvestXmlDataOnGroupResponse'
          description: Get harvest data
      security: []
      summary: Harvest xml data on the given group
      tags:
      - Harvest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--harvest-group-csw
      x-accepts: application/xml
    post:
      operationId: Harvest_xmlDataOnGroupPost
      parameters:
      - explode: false
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/GroupCode'
        style: simple
      - explode: true
        in: query
        name: service
        required: false
        schema:
          description: Name of the service being called
          enum:
          - CSW
          type: string
        style: form
      - explode: true
        in: query
        name: request
        required: false
        schema:
          description: Name of the operation being called
          enum:
          - GetRecords
          - GetRecordById
          - GetCapabilities
          type: string
        style: form
      - explode: true
        in: query
        name: version
        required: false
        schema:
          description: Version of the operation being called
          type: string
        style: form
      - explode: true
        in: query
        name: startPosition
        required: false
        schema:
          default: 1
          description: which record position the catalog should start generating output
          example: 1
          minimum: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--harvest-group-csw-parameters-4-schema
        style: form
      - explode: true
        in: query
        name: maxRecords
        required: false
        schema:
          default: 10
          description: the maximum number of records that should be returned from
            the result set of a query
          example: 10
          minimum: 1
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-paths--harvest-group-csw-parameters-5-schema
        style: form
      - explode: true
        in: query
        name: id
        required: false
        schema:
          description: A list of record identifiers for the records that a CSW shall
            return to the client
          items:
            format: uuid
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: outputSchema
        required: false
        schema:
          description: "This parameter does not affect the response, it only exists\
            \ to satisfy CSW format"
          enum:
          - http://www.isotc211.org/2005/gmd
          type: string
        style: form
      - explode: true
        in: query
        name: elementsetname
        required: false
        schema:
          description: "This parameter does not affect the response, it only exists\
            \ to satisfy CSW format"
          enum:
          - full
          - brief
          - summary
          type: string
        style: form
      - explode: true
        in: query
        name: outputFormat
        required: false
        schema:
          description: "This parameter does not affect the response, it only exists\
            \ to satisfy CSW format"
          enum:
          - application/xml
          type: string
        style: form
      - explode: true
        in: query
        name: typeNames
        required: false
        schema:
          description: "This parameter does not affect the response, it only exists\
            \ to satisfy CSW format"
          enum:
          - gmd:MD_Metadata
          - csw:Record
          type: string
        style: form
      - explode: true
        in: query
        name: resultType
        required: false
        schema:
          description: "This parameter does not affect the response, it only exists\
            \ to satisfy CSW format"
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/HarvestXmlDataOnGroupPostResponse'
          description: Get harvest data
        "400":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/HarvestXmlDataOnGroupPost400Response'
          description: Bad request
          x-do-not-generate: true
      security: []
      summary: Harvest xml data on the given group
      tags:
      - Harvest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--harvest-group-csw
      x-accepts: application/xml
  /harvest/{group}/dcat:
    get:
      operationId: Dataset_getNonSpatialDataForGroup
      parameters:
      - explode: false
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/GroupCode'
        style: simple
      responses:
        "200":
          content:
            text/turtle:
              schema:
                $ref: '#/components/schemas/DatasetGetNonSpatialDataForGroupResponse'
          description: Get Metadata as DCAT
      security: []
      summary: Get the DCAT metadata for the given group. This will retrieve metadata
        for all the non spatial datasets in the public domain.
      tags:
      - Dataset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--harvest-group-dcat
      x-accepts: text/turtle
components:
  schemas:
    RestError:
      example:
        message: Error Message
      properties:
        message:
          example: Error Message
          type: string
          x-konfig-original-example: Error Message
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-RestError-properties-message
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-konfig-is-used-in-successful-response: true
    NewLayers:
      example:
        layerId: 97130f06-6242-463f-bf19-0dd6f5a58cfb
        layers:
        - defaultEPSGCode: 4326
          WFS: "Y"
          datastore: Datastore Name
          geoserverHostName: geoserver-test.agrimetrics.co.uk
          WCS: "Y"
          OGCApiTiles: "Y"
          billable:
            billingCreditCost: 0.8008281904610115
            billingCreditType: billingCreditType
            billingDataType: billingDataType
          layerId: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          service: WCS
          datasetId: a420450f-ef42-4fc9-a137-69456bdad016
          geometryField: geom
          layerName: Geospatial Layer
          WMS: "Y"
          WMTS: "Y"
          OGCApiFeatures: "Y"
          temporal: true
        - defaultEPSGCode: 4326
          WFS: "Y"
          datastore: Datastore Name
          geoserverHostName: geoserver-test.agrimetrics.co.uk
          WCS: "Y"
          OGCApiTiles: "Y"
          billable:
            billingCreditCost: 0.8008281904610115
            billingCreditType: billingCreditType
            billingDataType: billingDataType
          layerId: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          service: WCS
          datasetId: a420450f-ef42-4fc9-a137-69456bdad016
          geometryField: geom
          layerName: Geospatial Layer
          WMS: "Y"
          WMTS: "Y"
          OGCApiFeatures: "Y"
          temporal: true
      properties:
        layers:
          items:
            $ref: '#/components/schemas/ServiceDefinitionResponse'
          type: array
        layerId:
          example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          type: string
          x-konfig-original-example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NewLayers-properties-layerId
      type: object
      x-konfig-is-used-in-successful-response: true
    CostSummary:
      example:
        numberOfChargeableItems: 1
        totalCost: 0
        totalNumberOfItems: 1
      properties:
        totalCost:
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CostSummary-properties-totalCost
        numberOfChargeableItems:
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CostSummary-properties-numberOfChargeableItems
        totalNumberOfItems:
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CostSummary-properties-totalNumberOfItems
      required:
      - numberOfChargeableItems
      - totalCost
      type: object
      x-konfig-is-used-in-successful-response: true
    GeoJSONPolygon:
      example:
        coordinates:
        - - - -1.3623046875
            - 52.8691297276852
          - - -1.16455078125
            - 52.736291655910925
          - - -0.9228515625
            - 52.65639394198803
          - - -0.37353515625
            - 52.76289173758374
          - - -1.3623046875
            - 52.8691297276852
        type: Polygon
      properties:
        type:
          enum:
          - Polygon
          type: string
        coordinates:
          items:
            example:
            - - -1.3623046875
              - 52.8691297276852
            - - -1.16455078125
              - 52.736291655910925
            - - -0.9228515625
              - 52.65639394198803
            - - -0.37353515625
              - 52.76289173758374
            - - -1.3623046875
              - 52.8691297276852
            items:
              items:
                $ref: '#/components/schemas/LEPSG4326'
              maxItems: 3
              minItems: 2
              type: array
            minItems: 4
            type: array
            x-konfig-original-example:
            - - -1.3623046875
              - 52.8691297276852
            - - -1.16455078125
              - 52.736291655910925
            - - -0.9228515625
              - 52.65639394198803
            - - -0.37353515625
              - 52.76289173758374
            - - -1.3623046875
              - 52.8691297276852
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-GeoJSONPolygon-properties-coordinates-items
          maxItems: 1
          minItems: 1
          type: array
      required:
      - coordinates
      - type
      type: object
      x-konfig-is-used-in-successful-response: true
    GeoJSONMultiPolygon:
      properties:
        type:
          enum:
          - MultiPolygon
          type: string
        coordinates:
          items:
            items:
              example:
              - - -1.3623046875
                - 52.8691297276852
              - - -1.16455078125
                - 52.736291655910925
              - - -0.9228515625
                - 52.65639394198803
              - - -0.37353515625
                - 52.76289173758374
              - - -1.3623046875
                - 52.8691297276852
              items:
                items:
                  $ref: '#/components/schemas/LEPSG43261'
                maxItems: 3
                minItems: 2
                type: array
              minItems: 4
              type: array
              x-konfig-original-example:
              - - -1.3623046875
                - 52.8691297276852
              - - -1.16455078125
                - 52.736291655910925
              - - -0.9228515625
                - 52.65639394198803
              - - -0.37353515625
                - 52.76289173758374
              - - -1.3623046875
                - 52.8691297276852
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-GeoJSONMultiPolygon-properties-coordinates-items-items
            maxItems: 1
            minItems: 1
            type: array
          minItems: 1
          type: array
      required:
      - coordinates
      - type
      type: object
    BinaryFile:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    Band:
      example:
        totalNumPixels: 128288
        stats:
          std: 20.756450653076172
          min: 14
          median: 43
          max: 100
          mean: 47.695621490478516
        index: Band 1
        pixelCounts:
          "14.0": 3
          "15.0": 43
          "16.0": 192
          "17.0": 397
          "18.0": 734
      properties:
        index:
          example: Band 1
          type: string
          x-konfig-original-example: Band 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Band-properties-index
        stats:
          $ref: '#/components/schemas/Band_stats'
        totalNumPixels:
          example: 128288
          type: number
          x-konfig-original-example: 128288
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Band-properties-totalNumPixels
        pixelCounts:
          additionalProperties:
            type: number
          description: |
            This object represents the number of pixel-value occurrences in the band. For example, a pixel-value `12.0` that occurs `3` times would be represented as `"12.0": 3` in this object.
          example:
            "14.0": 3
            "15.0": 43
            "16.0": 192
            "17.0": 397
            "18.0": 734
          type: object
          x-konfig-original-example:
            "14.0": 3
            "15.0": 43
            "16.0": 192
            "17.0": 397
            "18.0": 734
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Band-properties-pixelCounts
      required:
      - index
      - pixelCounts
      - stats
      - totalNumPixels
      type: object
    Statistics:
      example:
        bands:
        - totalNumPixels: 128288
          stats:
            std: 20.756450653076172
            min: 14
            median: 43
            max: 100
            mean: 47.695621490478516
          index: Band 1
          pixelCounts:
            "14.0": 3
            "15.0": 43
            "16.0": 192
            "17.0": 397
            "18.0": 734
        - totalNumPixels: 128288
          stats:
            std: 20.756450653076172
            min: 14
            median: 43
            max: 100
            mean: 47.695621490478516
          index: Band 1
          pixelCounts:
            "14.0": 3
            "15.0": 43
            "16.0": 192
            "17.0": 397
            "18.0": 734
      properties:
        bands:
          items:
            $ref: '#/components/schemas/Band'
          type: array
      required:
      - bands
      type: object
      x-konfig-is-used-in-successful-response: true
    Layer:
      example:
        layerId: 97130f06-6242-463f-bf19-0dd6f5a58cfb
        description: Geospatial Layer
        links:
          search: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
          self: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
      properties:
        description:
          example: Geospatial Layer
          type: string
          x-konfig-original-example: Geospatial Layer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Layer-properties-description
        layerId:
          example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          type: string
          x-konfig-original-example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Layer-properties-layerId
        links:
          $ref: '#/components/schemas/Layer_links'
      required:
      - description
      - layerId
      - links
      type: object
    BoundingBox:
      example:
        coordinates:
          minlon: 2.1234234
          maxlat: -1.1234234
          minlat: -1.1234234
          maxlon: 2.1234234
        type: bounding-box
      properties:
        type:
          enum:
          - bounding-box
          type: string
        coordinates:
          $ref: '#/components/schemas/BoundingBox_coordinates'
      required:
      - coordinates
      - type
      type: object
    EPSG4326Longitude:
      example: 2.1234234
      maximum: 180
      minimum: -180
      type: number
      x-konfig-original-example: 2.1234234
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EPSG4326Longitude
    EPSG4326Latitude:
      example: -1.1234234
      maximum: 90
      minimum: -90
      type: number
      x-konfig-original-example: -1.1234234
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EPSG4326Latitude
    GeoJSONPoint:
      description: "This is a GeoJSON Point. The coordinates array must be EPSG:4326\
        \ with [longitude,latitude] order."
      properties:
        type:
          enum:
          - Point
          type: string
        coordinates:
          example:
          - -91.85
          - 15.52
          items:
            $ref: '#/components/schemas/LEPSG43262'
          maxItems: 2
          minItems: 2
          type: array
          x-konfig-original-example:
          - -91.85
          - 15.52
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GeoJSONPoint-properties-coordinates
      required:
      - coordinates
      - type
      type: object
    GeneralGeometry: {}
    Times:
      example:
      - 2018-01-01T00:00:00.000Z
      - 2019-01-01T00:00:00.000Z
      items:
        format: date-time
        type: string
      type: array
      x-konfig-original-example:
      - 2018-01-01T00:00:00.000Z
      - 2019-01-01T00:00:00.000Z
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Times
    ISO8601Datetime:
      example: 20130310T180000Z
      pattern: "[0-9]{8}T[0-9]{6}Z"
      type: string
      x-konfig-original-example: 20130310T180000Z
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ISO8601Datetime
    OutputFormats:
      enum:
      - shape-zip
      - application/json
      - csv
      - GML3
      - image/tiff
      - KML
      - OGR-GDB
      - OGR-MIF
      - OGR-TAB
      - DXF
      type: string
    DatasetId:
      description: The ID of a dataset in the catalog
      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      format: uuid
      type: string
      x-konfig-original-example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-DatasetId
    LayerId:
      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      format: uuid
      type: string
      x-konfig-original-example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-LayerId
    PolygonOrBBoxSearchBase:
      properties:
        geometry: {}
        time:
          example: 2017-01-01T00:00:00Z
          format: date-time
          type: string
          x-konfig-original-example: 2017-01-01T00:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PolygonOrBBoxSearchBase-properties-time
      required:
      - geometry
      type: object
    PolygonOrBBoxSearch:
      allOf:
      - $ref: '#/components/schemas/PolygonOrBBoxSearchBase'
      - $ref: '#/components/schemas/PolygonOrBBoxSearch_allOf'
    PointSearchBase:
      properties:
        geometry:
          $ref: '#/components/schemas/GeoJSONPoint'
        distance:
          example: 10
          minimum: 10
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PointSearchBase-properties-distance
        time:
          example: 2017-01-01T00:00:00Z
          format: date-time
          type: string
          x-konfig-original-example: 2017-01-01T00:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PointSearchBase-properties-time
      required:
      - distance
      - geometry
      type: object
    PointSearch:
      allOf:
      - $ref: '#/components/schemas/PointSearchBase'
      - $ref: '#/components/schemas/PolygonOrBBoxSearch_allOf'
    ServiceDefinition:
      example:
        defaultEPSGCode: 4326
        WFS: "Y"
        WCS: "Y"
        datastore: Datastore Name
        geoserverHostName: geoserver-test.agrimetrics.co.uk
        OGCApiTiles: "Y"
        billable:
          billingCreditCost: 0.8008281904610115
          billingCreditType: billingCreditType
          billingDataType: billingDataType
        service: WCS
        datasetId: a420450f-ef42-4fc9-a137-69456bdad016
        geometryField: geom
        layerName: Geospatial Layer
        WMS: "Y"
        WMTS: "Y"
        OGCApiFeatures: "Y"
        temporal: true
      properties:
        datasetId:
          example: a420450f-ef42-4fc9-a137-69456bdad016
          type: string
          x-konfig-original-example: a420450f-ef42-4fc9-a137-69456bdad016
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-datasetId
        layerName:
          example: Geospatial Layer
          type: string
          x-konfig-original-example: Geospatial Layer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-layerName
        service:
          enum:
          - WCS
          - WFS
          type: string
        WFS:
          enum:
          - "Y"
          - "N"
          type: string
        WCS:
          enum:
          - "Y"
          - "N"
          type: string
        WMS:
          enum:
          - "Y"
          - "N"
          type: string
        WMTS:
          enum:
          - "Y"
          - "N"
          type: string
        OGCApiFeatures:
          enum:
          - "Y"
          - "N"
          type: string
        OGCApiTiles:
          enum:
          - "Y"
          - "N"
          type: string
        temporal:
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-temporal
        datastore:
          example: Datastore Name
          type: string
          x-konfig-original-example: Datastore Name
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-datastore
        geoserverHostName:
          example: geoserver-test.agrimetrics.co.uk
          type: string
          x-konfig-original-example: geoserver-test.agrimetrics.co.uk
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-geoserverHostName
        geometryField:
          example: geom
          type: string
          x-konfig-original-example: geom
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-geometryField
        billable:
          $ref: '#/components/schemas/Billable'
        defaultEPSGCode:
          example: 4326
          type: number
          x-konfig-original-example: 4326
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-defaultEPSGCode
      required:
      - OGCApiFeatures
      - OGCApiTiles
      - WCS
      - WFS
      - WMS
      - WMTS
      - datasetId
      - layerName
      - service
      type: object
    ServiceDefinitionResponse:
      example:
        defaultEPSGCode: 4326
        WFS: "Y"
        datastore: Datastore Name
        geoserverHostName: geoserver-test.agrimetrics.co.uk
        WCS: "Y"
        OGCApiTiles: "Y"
        billable:
          billingCreditCost: 0.8008281904610115
          billingCreditType: billingCreditType
          billingDataType: billingDataType
        layerId: 97130f06-6242-463f-bf19-0dd6f5a58cfb
        service: WCS
        datasetId: a420450f-ef42-4fc9-a137-69456bdad016
        geometryField: geom
        layerName: Geospatial Layer
        WMS: "Y"
        WMTS: "Y"
        OGCApiFeatures: "Y"
        temporal: true
      properties:
        layerId:
          example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          type: string
          x-konfig-original-example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-layerId
        datasetId:
          example: a420450f-ef42-4fc9-a137-69456bdad016
          type: string
          x-konfig-original-example: a420450f-ef42-4fc9-a137-69456bdad016
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-datasetId
        layerName:
          example: Geospatial Layer
          type: string
          x-konfig-original-example: Geospatial Layer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-layerName
        service:
          enum:
          - WCS
          - WFS
          type: string
        temporal:
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-temporal
        datastore:
          example: Datastore Name
          type: string
          x-konfig-original-example: Datastore Name
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-datastore
        geoserverHostName:
          example: geoserver-test.agrimetrics.co.uk
          type: string
          x-konfig-original-example: geoserver-test.agrimetrics.co.uk
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-geoserverHostName
        geometryField:
          example: geom
          type: string
          x-konfig-original-example: geom
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-geometryField
        billable:
          $ref: '#/components/schemas/Billable'
        defaultEPSGCode:
          example: 4326
          type: number
          x-konfig-original-example: 4326
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-defaultEPSGCode
        WMS:
          enum:
          - "Y"
          - "N"
          type: string
        WMTS:
          enum:
          - "Y"
          - "N"
          type: string
        WFS:
          enum:
          - "Y"
          - "N"
          type: string
        WCS:
          enum:
          - "Y"
          - "N"
          type: string
        OGCApiFeatures:
          enum:
          - "Y"
          - "N"
          type: string
        OGCApiTiles:
          enum:
          - "Y"
          - "N"
          type: string
      required:
      - OGCApiFeatures
      - OGCApiTiles
      - WCS
      - WFS
      - WMS
      - WMTS
      - datasetId
      - layerId
      - layerName
      - service
      type: object
      x-konfig-is-used-in-successful-response: true
    Billable:
      example:
        billingCreditCost: 0.8008281904610115
        billingCreditType: billingCreditType
        billingDataType: billingDataType
      properties:
        billingDataType:
          type: string
        billingCreditType:
          type: string
        billingCreditCost:
          type: number
      required:
      - billingCreditCost
      - billingCreditType
      - billingDataType
      type: object
    RequestId:
      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      format: uuid
      type: string
      x-konfig-original-example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-RequestId
    uniqueLinkId:
      type: string
    DataRequestResponse:
      items:
        $ref: '#/components/schemas/DataRequestResponse_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    DataRequestDetails:
      items:
        $ref: '#/components/schemas/DataRequestDetails_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    DataRequest:
      properties:
        projectName:
          description: The name of the project the data is for
          type: string
        projectManagerName:
          description: The name of the project manager who can approve the request
          type: string
        projectManagerEmail:
          description: The email address of the project manager who can approve the
            request
          type: string
        datasetId:
          description: The ID of the dataset that the data request relates to
          format: uuid
          type: string
        datasetName:
          description: The name of the dataset that the data request relates to
          type: string
        geoJsonAOI:
          description: The area of interest that the user is requesting access to
            as a stringified GeoJSON
          type: string
        shapefileAOI:
          description: The area of interest that the user is requesting access to
            as a zipped shapefile
          format: binary
          type: string
        requestedFormat:
          description: The format the user would like the data to be provided in
          enum:
          - application/geo+json
          - application/gml+xml; version=3.2
          - application/vnd.google-earth.kml+xml
          - application/zipped-shapefile
          - application/x.gdb+zip
          - application/x.mid-mif+zip
          - application/x.tab+zip
          - application/dxf
          - image/tiff
          type: string
      required:
      - datasetId
      - datasetName
      - projectManagerEmail
      - projectManagerName
      - projectName
      - requestedFormat
      type: object
    Category:
      example:
        label: label
        value: null
      properties:
        value:
          $ref: '#/components/schemas/CategoryValue'
        label:
          description: The label of the category
          type: string
      type: object
    Categories:
      items:
        $ref: '#/components/schemas/Category'
      type: array
      x-konfig-is-used-in-successful-response: true
    Creator:
      properties:
        value:
          description: The value of the creator
          type: string
        label:
          description: The label of the creator
          type: string
      type: object
    Concept:
      example:
        label: label
        value: value
      properties:
        value:
          description: The value of the concept
          type: string
        label:
          description: The label of the concept
          type: string
      required:
      - label
      - value
      type: object
    Concepts:
      items:
        $ref: '#/components/schemas/Concept'
      type: array
    TagsOrConcepts:
      items:
        $ref: '#/components/schemas/TagOrConcept'
      type: array
    TagOrConcept:
      example:
        label: label
        type: tag
        value: value
      properties:
        value:
          description: The id of the tag
          type: string
        label:
          description: The label of the tag
          type: string
        type:
          description: The type of the tag
          enum:
          - tag
          - concept
          type: string
      required:
      - label
      - type
      type: object
    Exchange:
      enum:
      - agrimetrics
      - defra
      type: string
    DataSets:
      example:
        concepts:
        - label: label
          value: value
        - label: label
          value: value
        dataSets:
        - entitlements:
          - null
          - null
          lineage: lineage
          characterSet: characterSet
          keywords:
          - keywords
          - keywords
          publishedStatus: null
          dataFormats:
          - dataFormat: dataFormat
            version: version
          - dataFormat: dataFormat
            version: version
          metadataStandardName: metadataStandardName
          draftNotes: draftNotes
          language: language
          createdAt: 0.8008281904610115
          temporalResolution: P1Y
          scoringURI: scoringURI
          isOwner: true
          approvalForAccessStatus: AfA (Information Requests only)
          metadataLanguage: metadataLanguage
          modified: 3.616076749251911
          id: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          issued: issued
          geospatialExtent:
            northBoundLatitude: 5.637376656633329
            southBoundLatitude: 7.061401241503109
            eastBoundLongitude: 2.3021358869347655
            westBoundLongitude: 9.301444243932576
          entryType: null
          licence:
            attributionStatement: attributionStatement
            text: text
            useConstraints: useConstraints
            useLimitationStatement: useLimitationStatement
            url: url
          image:
            author:
              name: name
              url: https://openapi-generator.tech
            type: type
            url: https://openapi-generator.tech
            thumbnailUrl: https://openapi-generator.tech
          coordinateReferenceSystemId: coordinateReferenceSystemId
          visibility: visible
          metadataModified: 1.4658129805029452
          published: 6.027456183070403
          spatialCoverage: null
          distributions:
          - service: service
            description: description
          - service: service
            description: description
          tags:
          - tags
          - tags
          license: license
          concepts:
          - concepts
          - concepts
          spatialRepresentationType: spatialRepresentationType
          entitlementsByIdentity:
            key:
            - null
            - null
          publisher: publisher
          exchange: null
          accrualPeriodicity: null
          taxonomyKeywords:
          - valueLabel: hydrology
            sourceUri: http://inspire.ec.europa.eu/theme
            sourceLabel: "GEMET - INSPIRE themes, version 1.0"
            valueUri: http://www.eionet.europa.eu/gemet/concept/4118
          - valueLabel: hydrology
            sourceUri: http://inspire.ec.europa.eu/theme
            sourceLabel: "GEMET - INSPIRE themes, version 1.0"
            valueUri: http://www.eionet.europa.eu/gemet/concept/4118
          endpointKey: endpointKey
          draftStatus: null
          hierarchyLevel: hierarchyLevel
          description: description
          title: title
          metadataStandardVersion: metadataStandardVersion
          pricingDescription: pricingDescription
          publicContact:
            organisationName: organisationName
            urlLabel: urlLabel
            emailAddress: emailAddress
            role: pointOfContact
            url: url
          derivedFrom:
          - ""
          - ""
          dataSet:
            id: id
            type: file
          usedBy:
          - entryType: null
            id: 97130f06-6242-463f-bf19-0dd6f5a58cfb
            title: title
          - entryType: null
            id: 97130f06-6242-463f-bf19-0dd6f5a58cfb
            title: title
          alternativeTitles:
          - alternativeTitles
          - alternativeTitles
          summary: summary
          creator: creator
          dataReliability: dataReliability
          workflowKeywords:
          - null
          - null
          topics:
          - null
          - null
          approvalForAccessNumber: 2.027123023002322
          landingPage: landingPage
          metadataCharacterSet: metadataCharacterSet
          resources:
          - private: true
            name: name
            description: description
            id: id
            url: url
          - private: true
            name: name
            description: description
            id: id
            url: url
          services:
          - label: label
            uri: uri
          - label: label
            uri: uri
          fromTemplate: fromTemplate
          spatialResolution: 5.962133916683182
          temporalCoverage: temporalCoverage
          sampleData:
            csv: csv
            json: json
          metadataContact:
            positionName: positionName
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
          category: null
          contacts:
          - positionName: positionName
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
          - positionName: positionName
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
        - entitlements:
          - null
          - null
          lineage: lineage
          characterSet: characterSet
          keywords:
          - keywords
          - keywords
          publishedStatus: null
          dataFormats:
          - dataFormat: dataFormat
            version: version
          - dataFormat: dataFormat
            version: version
          metadataStandardName: metadataStandardName
          draftNotes: draftNotes
          language: language
          createdAt: 0.8008281904610115
          temporalResolution: P1Y
          scoringURI: scoringURI
          isOwner: true
          approvalForAccessStatus: AfA (Information Requests only)
          metadataLanguage: metadataLanguage
          modified: 3.616076749251911
          id: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          issued: issued
          geospatialExtent:
            northBoundLatitude: 5.637376656633329
            southBoundLatitude: 7.061401241503109
            eastBoundLongitude: 2.3021358869347655
            westBoundLongitude: 9.301444243932576
          entryType: null
          licence:
            attributionStatement: attributionStatement
            text: text
            useConstraints: useConstraints
            useLimitationStatement: useLimitationStatement
            url: url
          image:
            author:
              name: name
              url: https://openapi-generator.tech
            type: type
            url: https://openapi-generator.tech
            thumbnailUrl: https://openapi-generator.tech
          coordinateReferenceSystemId: coordinateReferenceSystemId
          visibility: visible
          metadataModified: 1.4658129805029452
          published: 6.027456183070403
          spatialCoverage: null
          distributions:
          - service: service
            description: description
          - service: service
            description: description
          tags:
          - tags
          - tags
          license: license
          concepts:
          - concepts
          - concepts
          spatialRepresentationType: spatialRepresentationType
          entitlementsByIdentity:
            key:
            - null
            - null
          publisher: publisher
          exchange: null
          accrualPeriodicity: null
          taxonomyKeywords:
          - valueLabel: hydrology
            sourceUri: http://inspire.ec.europa.eu/theme
            sourceLabel: "GEMET - INSPIRE themes, version 1.0"
            valueUri: http://www.eionet.europa.eu/gemet/concept/4118
          - valueLabel: hydrology
            sourceUri: http://inspire.ec.europa.eu/theme
            sourceLabel: "GEMET - INSPIRE themes, version 1.0"
            valueUri: http://www.eionet.europa.eu/gemet/concept/4118
          endpointKey: endpointKey
          draftStatus: null
          hierarchyLevel: hierarchyLevel
          description: description
          title: title
          metadataStandardVersion: metadataStandardVersion
          pricingDescription: pricingDescription
          publicContact:
            organisationName: organisationName
            urlLabel: urlLabel
            emailAddress: emailAddress
            role: pointOfContact
            url: url
          derivedFrom:
          - ""
          - ""
          dataSet:
            id: id
            type: file
          usedBy:
          - entryType: null
            id: 97130f06-6242-463f-bf19-0dd6f5a58cfb
            title: title
          - entryType: null
            id: 97130f06-6242-463f-bf19-0dd6f5a58cfb
            title: title
          alternativeTitles:
          - alternativeTitles
          - alternativeTitles
          summary: summary
          creator: creator
          dataReliability: dataReliability
          workflowKeywords:
          - null
          - null
          topics:
          - null
          - null
          approvalForAccessNumber: 2.027123023002322
          landingPage: landingPage
          metadataCharacterSet: metadataCharacterSet
          resources:
          - private: true
            name: name
            description: description
            id: id
            url: url
          - private: true
            name: name
            description: description
            id: id
            url: url
          services:
          - label: label
            uri: uri
          - label: label
            uri: uri
          fromTemplate: fromTemplate
          spatialResolution: 5.962133916683182
          temporalCoverage: temporalCoverage
          sampleData:
            csv: csv
            json: json
          metadataContact:
            positionName: positionName
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
          category: null
          contacts:
          - positionName: positionName
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
          - positionName: positionName
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
      properties:
        dataSets:
          description: An array of data sets
          items:
            $ref: '#/components/schemas/DataSet'
          type: array
        concepts:
          items:
            $ref: '#/components/schemas/Concept'
          type: array
      required:
      - dataSets
      type: object
      x-konfig-is-used-in-successful-response: true
    BasicDataSetInfo:
      example:
        entryType: null
        id: 97130f06-6242-463f-bf19-0dd6f5a58cfb
        title: title
      properties:
        title:
          description: Title for the data set.
          type: string
        id:
          description: The ID of a dataset in the catalog
          example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          format: uuid
          type: string
          x-konfig-original-example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DatasetId
        entryType:
          $ref: '#/components/schemas/EntryType'
      required:
      - entryType
      - id
      - title
      type: object
    DataSet:
      example:
        entitlements:
        - null
        - null
        lineage: lineage
        characterSet: characterSet
        keywords:
        - keywords
        - keywords
        publishedStatus: null
        dataFormats:
        - dataFormat: dataFormat
          version: version
        - dataFormat: dataFormat
          version: version
        metadataStandardName: metadataStandardName
        draftNotes: draftNotes
        language: language
        createdAt: 0.8008281904610115
        temporalResolution: P1Y
        scoringURI: scoringURI
        isOwner: true
        approvalForAccessStatus: AfA (Information Requests only)
        metadataLanguage: metadataLanguage
        modified: 3.616076749251911
        id: 97130f06-6242-463f-bf19-0dd6f5a58cfb
        issued: issued
        geospatialExtent:
          northBoundLatitude: 5.637376656633329
          southBoundLatitude: 7.061401241503109
          eastBoundLongitude: 2.3021358869347655
          westBoundLongitude: 9.301444243932576
        entryType: null
        licence:
          attributionStatement: attributionStatement
          text: text
          useConstraints: useConstraints
          useLimitationStatement: useLimitationStatement
          url: url
        image:
          author:
            name: name
            url: https://openapi-generator.tech
          type: type
          url: https://openapi-generator.tech
          thumbnailUrl: https://openapi-generator.tech
        coordinateReferenceSystemId: coordinateReferenceSystemId
        visibility: visible
        metadataModified: 1.4658129805029452
        published: 6.027456183070403
        spatialCoverage: null
        distributions:
        - service: service
          description: description
        - service: service
          description: description
        tags:
        - tags
        - tags
        license: license
        concepts:
        - concepts
        - concepts
        spatialRepresentationType: spatialRepresentationType
        entitlementsByIdentity:
          key:
          - null
          - null
        publisher: publisher
        exchange: null
        accrualPeriodicity: null
        taxonomyKeywords:
        - valueLabel: hydrology
          sourceUri: http://inspire.ec.europa.eu/theme
          sourceLabel: "GEMET - INSPIRE themes, version 1.0"
          valueUri: http://www.eionet.europa.eu/gemet/concept/4118
        - valueLabel: hydrology
          sourceUri: http://inspire.ec.europa.eu/theme
          sourceLabel: "GEMET - INSPIRE themes, version 1.0"
          valueUri: http://www.eionet.europa.eu/gemet/concept/4118
        endpointKey: endpointKey
        draftStatus: null
        hierarchyLevel: hierarchyLevel
        description: description
        title: title
        metadataStandardVersion: metadataStandardVersion
        pricingDescription: pricingDescription
        publicContact:
          organisationName: organisationName
          urlLabel: urlLabel
          emailAddress: emailAddress
          role: pointOfContact
          url: url
        derivedFrom:
        - ""
        - ""
        dataSet:
          id: id
          type: file
        usedBy:
        - entryType: null
          id: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          title: title
        - entryType: null
          id: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          title: title
        alternativeTitles:
        - alternativeTitles
        - alternativeTitles
        summary: summary
        creator: creator
        dataReliability: dataReliability
        workflowKeywords:
        - null
        - null
        topics:
        - null
        - null
        approvalForAccessNumber: 2.027123023002322
        landingPage: landingPage
        metadataCharacterSet: metadataCharacterSet
        resources:
        - private: true
          name: name
          description: description
          id: id
          url: url
        - private: true
          name: name
          description: description
          id: id
          url: url
        services:
        - label: label
          uri: uri
        - label: label
          uri: uri
        fromTemplate: fromTemplate
        spatialResolution: 5.962133916683182
        temporalCoverage: temporalCoverage
        sampleData:
          csv: csv
          json: json
        metadataContact:
          positionName: positionName
          organisationName: organisationName
          emailAddress: emailAddress
          role: resourceProvider
          individualName: individualName
        category: null
        contacts:
        - positionName: positionName
          organisationName: organisationName
          emailAddress: emailAddress
          role: resourceProvider
          individualName: individualName
        - positionName: positionName
          organisationName: organisationName
          emailAddress: emailAddress
          role: resourceProvider
          individualName: individualName
      properties:
        tags:
          description: List of tags on this data set.
          items:
            description: tag value
            maxLength: 80
            type: string
          type: array
        summary:
          description: Summary of the data set.
          maxLength: 140
          type: string
        title:
          description: Title for the data set.
          type: string
        description:
          description: Description of the data set.
          type: string
        id:
          description: The ID of a dataset in the catalog
          example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          format: uuid
          type: string
          x-konfig-original-example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DatasetId
        entryType:
          $ref: '#/components/schemas/EntryType'
        exchange:
          $ref: '#/components/schemas/Exchange'
        alternativeTitles:
          items:
            type: string
          type: array
        scoringURI:
          description: Scoring URI of the model.
          type: string
        endpointKey:
          description: Endpoint key for the model.
          type: string
        isOwner:
          description: Whether the current user is the owner of this data set.
          type: boolean
        publisher:
          description: The ID of the publisher.
          type: string
        createdAt:
          description: Data set creation timestamp.
          format: int64
          type: number
        published:
          description: Data set publication timestamp.
          format: int64
          type: number
        metadataModified:
          description: Metadata last-modification timestmap.
          format: int64
          type: number
        usedBy:
          description: Other data sets using this data set.
          items:
            $ref: '#/components/schemas/BasicDataSetInfo'
          type: array
        derivedFrom:
          description: |
            Data sets used to generate this data set. When updating a data set, use an array of IDs. When GETting the data set, the return type will be `BasicDataSetInfo`.
          items: {}
          type: array
        entitlements:
          description: Entitlements for the current user.
          items:
            $ref: '#/components/schemas/Entitlement'
          type: array
        entitlementsByIdentity:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Entitlement'
            type: array
          description: Array of entitlements by user identity.
          type: object
        creator:
          description: Creator of the data set.
          type: string
        dataReliability:
          description: Free text description about the reliability of this dataset.
          type: string
        license:
          deprecated: true
          description: License of the data set.
          type: string
        licence:
          $ref: '#/components/schemas/Licence'
        landingPage:
          deprecated: true
          description: DEPRECATED. This has been replaced with the resources attribute.
            Reference URI of the data set.
          type: string
        resources:
          description: Links containing more information on the data set
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        dataFormats:
          description: Format of the data set
          items:
            $ref: '#/components/schemas/DataFormat'
          type: array
        pricingDescription:
          description: Pricing description of the data set.
          type: string
        spatialCoverage:
          $ref: '#/components/schemas/SpatialCoverage'
        spatialResolution:
          description: The resolution of data set in meters.
          type: number
        geospatialExtent:
          $ref: '#/components/schemas/GeospatialExtent'
        temporalCoverage:
          description: The time frame this data set covers.
          pattern: "^\\d{4}-[01]\\d-[0-3]\\d(?:-\\d{4}-[01]\\d-[0-3]\\d)?$"
          type: string
        temporalResolution:
          description: The sampling time period of the data set.
          enum:
          - P1Y
          - P1M
          - P1D
          - PT1H
          - PT1M
          - PT1S
          type: string
        accrualPeriodicity:
          $ref: '#/components/schemas/AccrualPeriodicity'
        distributions:
          items:
            $ref: '#/components/schemas/DataSet_distributions_inner'
          type: array
        issued:
          description: The date when the data set was issued.
          pattern: "^\\d{4}-[01]\\d-[0-3]\\d$"
          type: string
        modified:
          description: An timestamp of when the data in this dataset was last updated
          type: number
        keywords:
          deprecated: true
          description: List of keywords on this data set. keywords is deprecated -
            use tags instead
          items:
            description: keyword value
            type: string
          type: array
        topics:
          description: List of topics on this data set
          items:
            $ref: '#/components/schemas/Topic'
          type: array
        workflowKeywords:
          description: List of workflow keywords on this data set
          items:
            $ref: '#/components/schemas/WorkflowKeywords'
          type: array
        taxonomyKeywords:
          description: List of keywords based on specific taxonomies
          items:
            $ref: '#/components/schemas/TaxonomyKeywords'
          type: array
        category:
          $ref: '#/components/schemas/CategoryValue'
        visibility:
          description: Whether or not this data set should be displayed in the index.
          enum:
          - visible
          - hidden
          type: string
        concepts:
          description: List of concepts on this data set. Check the concepts endpoint
            to see valid values.
          items:
            description: concept URI
            type: string
          type: array
        dataSet:
          $ref: '#/components/schemas/DataSet_dataSet'
        services:
          description: List of services available on the data set
          items:
            $ref: '#/components/schemas/DataSet_services_inner'
          type: array
        sampleData:
          $ref: '#/components/schemas/DataSet_sampleData'
        image:
          $ref: '#/components/schemas/ImageRepresentation'
        coordinateReferenceSystemId:
          description: URL to the specification of the coordinate system used in the
            data
          type: string
        spatialRepresentationType:
          description: Type of the geospatial data
          type: string
        lineage:
          description: Information about the creation and quality assurance process
            of the dataset
          type: string
        fromTemplate:
          description: Information about which template was used to create the dataset
            record
          type: string
        contacts:
          description: List of contacts for this data set
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        metadataContact:
          $ref: '#/components/schemas/Contact'
        publicContact:
          $ref: '#/components/schemas/PublicContact'
        approvalForAccessNumber:
          description: Approval for access status number
          type: number
        approvalForAccessStatus:
          description: Approval for access status value
          enum:
          - AfA (Information Requests only)
          - AfA (Public Register)
          - AfA (Publication Scheme and Information for Re-Use Register)
          - AfA (Publication Scheme)
          - Not AfA (To be Assessessed with Guidance)
          - Not AfA (To be Assessed)
          - Not Applicable - Third Party Dataset
          - Open Data Risk Assessment
          type: string
        language:
          description: Language used on the data set
          type: string
        characterSet:
          description: Character set used on the data set
          type: string
        hierarchyLevel:
          description: Hierarchy level of the data set
          type: string
        metadataLanguage:
          description: Language used on the metadata
          type: string
        metadataCharacterSet:
          description: Character set used on the metadata
          type: string
        metadataStandardName:
          type: string
        metadataStandardVersion:
          type: string
        draftStatus:
          $ref: '#/components/schemas/DraftStatus'
        draftNotes:
          description: Any notes added during review of the data set
          type: string
        publishedStatus:
          $ref: '#/components/schemas/PublishedStatus'
      required:
      - description
      - entryType
      - title
      type: object
      x-konfig-is-used-in-successful-response: true
    DataSetTemplateMetadata:
      description: Used as params for POST/PUT requests
      example:
        entitlements:
        - entitlements:
            catalog:
              read: true
              readSensitive: true
              write: true
            isAdmin: true
            dataSet:
              read: true
              write: true
          identity:
            name: name
            id: id
            type: user
            email: email
        - entitlements:
            catalog:
              read: true
              readSensitive: true
              write: true
            isAdmin: true
            dataSet:
              read: true
              write: true
          identity:
            name: name
            id: id
            type: user
            email: email
        creatorEntitlements:
          catalog:
            read: true
            readSensitive: true
            write: true
          isAdmin: true
          dataSet:
            read: true
            write: true
        name: name
        description: description
        exchange: null
        dataSet:
          lineage: lineage
          characterSet: characterSet
          endpointKey: endpointKey
          publishedStatus: null
          dataFormats:
          - dataFormat: dataFormat
            version: version
          - dataFormat: dataFormat
            version: version
          hierarchyLevel: hierarchyLevel
          metadataStandardName: metadataStandardName
          description: description
          language: language
          title: title
          createdAt: 2.3021358869347655
          temporalResolution: P1Y
          metadataStandardVersion: metadataStandardVersion
          scoringURI: scoringURI
          pricingDescription: pricingDescription
          approvalForAccessStatus: AfA (Information Requests only)
          derivedFrom:
          - ""
          - ""
          metadataLanguage: metadataLanguage
          modified: 9.301444243932576
          temporalExtent:
            end: end
            begin: begin
          issued: issued
          geospatialExtent:
            northBoundLatitude: 6.027456183070403
            southBoundLatitude: 5.962133916683182
            eastBoundLongitude: 1.4658129805029452
            westBoundLongitude: 5.637376656633329
          alternativeTitles:
          - alternativeTitles
          - alternativeTitles
          summary: summary
          licence:
            attributionStatement: attributionStatement
            text: text
            useConstraints: useConstraints
            useLimitationStatement: useLimitationStatement
            url: url
          creator: creator
          coordinateReferenceSystemId: coordinateReferenceSystemId
          dataReliability: dataReliability
          visibility: visible
          workflowKeywords:
          - null
          - null
          topics:
          - null
          - null
          approvalForAccessNumber: 3.616076749251911
          metadataCharacterSet: metadataCharacterSet
          resources:
          - private: true
            name: name
            description: description
            id: id
            url: url
          - private: true
            name: name
            description: description
            id: id
            url: url
          published: 7.061401241503109
          spatialCoverage: United Kingdom
          spatialResolution: 0.8008281904610115
          distributions:
          - service: service
            description: description
          - service: service
            description: description
          tags:
          - tags
          - tags
          license: license
          temporalCoverage: temporalCoverage
          spatialRepresentationType: spatialRepresentationType
          metadataContact:
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
          accrualPeriodicity: Hourly
          taxonomyKeywords:
          - valueLabel: hydrology
            sourceUri: http://inspire.ec.europa.eu/theme
            sourceLabel: "GEMET - INSPIRE themes, version 1.0"
            valueUri: http://www.eionet.europa.eu/gemet/concept/4118
          - valueLabel: hydrology
            sourceUri: http://inspire.ec.europa.eu/theme
            sourceLabel: "GEMET - INSPIRE themes, version 1.0"
            valueUri: http://www.eionet.europa.eu/gemet/concept/4118
          category: null
          contacts:
          - positionName: positionName
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
          - positionName: positionName
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
      properties:
        description:
          type: string
        name:
          type: string
        dataSet:
          $ref: '#/components/schemas/DataSetPatch'
        entitlements:
          items:
            $ref: '#/components/schemas/BatchIdentityInputEntitlements_inner'
          type: array
        creatorEntitlements:
          $ref: '#/components/schemas/Entitlements'
        exchange:
          $ref: '#/components/schemas/Exchange'
      required:
      - name
      type: object
    DataSetTemplatePatchMetadata:
      description: Used as params for PATCH requests
      example:
        entitlements:
        - entitlements:
            catalog:
              read: true
              readSensitive: true
              write: true
            isAdmin: true
            dataSet:
              read: true
              write: true
          identity:
            name: name
            id: id
            type: user
            email: email
        - entitlements:
            catalog:
              read: true
              readSensitive: true
              write: true
            isAdmin: true
            dataSet:
              read: true
              write: true
          identity:
            name: name
            id: id
            type: user
            email: email
        creatorEntitlements:
          catalog:
            read: true
            readSensitive: true
            write: true
          isAdmin: true
          dataSet:
            read: true
            write: true
        name: name
        description: description
        dataSet:
          lineage: lineage
          characterSet: characterSet
          endpointKey: endpointKey
          publishedStatus: null
          dataFormats:
          - dataFormat: dataFormat
            version: version
          - dataFormat: dataFormat
            version: version
          hierarchyLevel: hierarchyLevel
          metadataStandardName: metadataStandardName
          description: description
          language: language
          title: title
          createdAt: 2.3021358869347655
          temporalResolution: P1Y
          metadataStandardVersion: metadataStandardVersion
          scoringURI: scoringURI
          pricingDescription: pricingDescription
          approvalForAccessStatus: AfA (Information Requests only)
          derivedFrom:
          - ""
          - ""
          metadataLanguage: metadataLanguage
          modified: 9.301444243932576
          temporalExtent:
            end: end
            begin: begin
          issued: issued
          geospatialExtent:
            northBoundLatitude: 6.027456183070403
            southBoundLatitude: 5.962133916683182
            eastBoundLongitude: 1.4658129805029452
            westBoundLongitude: 5.637376656633329
          alternativeTitles:
          - alternativeTitles
          - alternativeTitles
          summary: summary
          licence:
            attributionStatement: attributionStatement
            text: text
            useConstraints: useConstraints
            useLimitationStatement: useLimitationStatement
            url: url
          creator: creator
          coordinateReferenceSystemId: coordinateReferenceSystemId
          dataReliability: dataReliability
          visibility: visible
          workflowKeywords:
          - null
          - null
          topics:
          - null
          - null
          approvalForAccessNumber: 3.616076749251911
          metadataCharacterSet: metadataCharacterSet
          resources:
          - private: true
            name: name
            description: description
            id: id
            url: url
          - private: true
            name: name
            description: description
            id: id
            url: url
          published: 7.061401241503109
          spatialCoverage: United Kingdom
          spatialResolution: 0.8008281904610115
          distributions:
          - service: service
            description: description
          - service: service
            description: description
          tags:
          - tags
          - tags
          license: license
          temporalCoverage: temporalCoverage
          spatialRepresentationType: spatialRepresentationType
          metadataContact:
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
          accrualPeriodicity: Hourly
          taxonomyKeywords:
          - valueLabel: hydrology
            sourceUri: http://inspire.ec.europa.eu/theme
            sourceLabel: "GEMET - INSPIRE themes, version 1.0"
            valueUri: http://www.eionet.europa.eu/gemet/concept/4118
          - valueLabel: hydrology
            sourceUri: http://inspire.ec.europa.eu/theme
            sourceLabel: "GEMET - INSPIRE themes, version 1.0"
            valueUri: http://www.eionet.europa.eu/gemet/concept/4118
          category: null
          contacts:
          - positionName: positionName
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
          - positionName: positionName
            organisationName: organisationName
            emailAddress: emailAddress
            role: resourceProvider
            individualName: individualName
      properties:
        description:
          type: string
        name:
          type: string
        dataSet:
          $ref: '#/components/schemas/DataSetPatch'
        entitlements:
          items:
            $ref: '#/components/schemas/BatchIdentityInputEntitlements_inner'
          type: array
        creatorEntitlements:
          $ref: '#/components/schemas/Entitlements'
      type: object
    DataSetTemplateEntity:
      allOf:
      - $ref: '#/components/schemas/DataSetTemplateEntity_allOf'
      - $ref: '#/components/schemas/DataSetTemplateMetadata'
      description: "Returned from API responses, includes id and other required properties"
      x-konfig-is-used-in-successful-response: true
    DataSetPatch:
      example:
        lineage: lineage
        characterSet: characterSet
        endpointKey: endpointKey
        publishedStatus: null
        dataFormats:
        - dataFormat: dataFormat
          version: version
        - dataFormat: dataFormat
          version: version
        hierarchyLevel: hierarchyLevel
        metadataStandardName: metadataStandardName
        description: description
        language: language
        title: title
        createdAt: 2.3021358869347655
        temporalResolution: P1Y
        metadataStandardVersion: metadataStandardVersion
        scoringURI: scoringURI
        pricingDescription: pricingDescription
        approvalForAccessStatus: AfA (Information Requests only)
        derivedFrom:
        - ""
        - ""
        metadataLanguage: metadataLanguage
        modified: 9.301444243932576
        temporalExtent:
          end: end
          begin: begin
        issued: issued
        geospatialExtent:
          northBoundLatitude: 6.027456183070403
          southBoundLatitude: 5.962133916683182
          eastBoundLongitude: 1.4658129805029452
          westBoundLongitude: 5.637376656633329
        alternativeTitles:
        - alternativeTitles
        - alternativeTitles
        summary: summary
        licence:
          attributionStatement: attributionStatement
          text: text
          useConstraints: useConstraints
          useLimitationStatement: useLimitationStatement
          url: url
        creator: creator
        coordinateReferenceSystemId: coordinateReferenceSystemId
        dataReliability: dataReliability
        visibility: visible
        workflowKeywords:
        - null
        - null
        topics:
        - null
        - null
        approvalForAccessNumber: 3.616076749251911
        metadataCharacterSet: metadataCharacterSet
        resources:
        - private: true
          name: name
          description: description
          id: id
          url: url
        - private: true
          name: name
          description: description
          id: id
          url: url
        published: 7.061401241503109
        spatialCoverage: United Kingdom
        spatialResolution: 0.8008281904610115
        distributions:
        - service: service
          description: description
        - service: service
          description: description
        tags:
        - tags
        - tags
        license: license
        temporalCoverage: temporalCoverage
        spatialRepresentationType: spatialRepresentationType
        metadataContact:
          organisationName: organisationName
          emailAddress: emailAddress
          role: resourceProvider
          individualName: individualName
        accrualPeriodicity: Hourly
        taxonomyKeywords:
        - valueLabel: hydrology
          sourceUri: http://inspire.ec.europa.eu/theme
          sourceLabel: "GEMET - INSPIRE themes, version 1.0"
          valueUri: http://www.eionet.europa.eu/gemet/concept/4118
        - valueLabel: hydrology
          sourceUri: http://inspire.ec.europa.eu/theme
          sourceLabel: "GEMET - INSPIRE themes, version 1.0"
          valueUri: http://www.eionet.europa.eu/gemet/concept/4118
        category: null
        contacts:
        - positionName: positionName
          organisationName: organisationName
          emailAddress: emailAddress
          role: resourceProvider
          individualName: individualName
        - positionName: positionName
          organisationName: organisationName
          emailAddress: emailAddress
          role: resourceProvider
          individualName: individualName
      properties:
        tags:
          description: List of tags on this data set.
          items:
            description: tag value
            maxLength: 80
            type: string
          nullable: true
          type: array
        summary:
          description: Summary of the data set.
          maxLength: 140
          type: string
        title:
          description: Title for the data set.
          type: string
        description:
          description: Description of the data set.
          type: string
        alternativeTitles:
          items:
            type: string
          type: array
        scoringURI:
          description: ScoringURI for the model.
          type: string
        endpointKey:
          description: Endpoint key for the model.
          type: string
        derivedFrom:
          description: |
            Data sets used to generate this data set. When updating a data set, use an array of IDs. When GETting the data set, the return type will be `BasicDataSetInfo`.
          items: {}
          nullable: true
          type: array
        creator:
          description: Creator of the data set.
          nullable: true
          type: string
        dataReliability:
          description: Free text description about the reliability of this dataset.
          nullable: true
          type: string
        license:
          deprecated: true
          description: License of the data set.
          nullable: true
          type: string
        licence:
          $ref: '#/components/schemas/DataSetPatch_licence'
        resources:
          description: Links containing more information on the data set
          items:
            $ref: '#/components/schemas/Resource'
          nullable: true
          type: array
        dataFormats:
          description: Format of the data set
          items:
            $ref: '#/components/schemas/DataFormat'
          nullable: true
          type: array
        spatialCoverage:
          description: The geo spatial coverage of the data set.
          enum:
          - United Kingdom
          - England
          - Northern Ireland
          - Scotland
          - Wales
          - Canada
          - Ethiopia
          - France
          - India
          - Kenya
          - Mexico
          - Netherlands
          - Spain
          - Tanzania
          - Uganda
          - United States
          - Global only
          - null
          nullable: true
          type: string
        spatialResolution:
          description: The resolution of data set in meters.
          nullable: true
          type: number
        geospatialExtent:
          $ref: '#/components/schemas/DataSetPatch_geospatialExtent'
        temporalCoverage:
          description: The time frame this data set covers.
          nullable: true
          pattern: "^\\d{4}-[01]\\d-[0-3]\\d(?:-\\d{4}-[01]\\d-[0-3]\\d)?$"
          type: string
        temporalExtent:
          $ref: '#/components/schemas/DataSetPatch_temporalExtent'
        temporalResolution:
          description: The sampling time period of the data set.
          enum:
          - P1Y
          - P1M
          - P1D
          - PT1H
          - PT1M
          - PT1S
          - null
          nullable: true
          type: string
        topics:
          items:
            $ref: '#/components/schemas/Topic'
          type: array
        workflowKeywords:
          description: List of workflow keywords on this data set
          items:
            $ref: '#/components/schemas/WorkflowKeywords'
          type: array
        taxonomyKeywords:
          description: List of keywords based on specific taxonomies
          items:
            $ref: '#/components/schemas/TaxonomyKeywords'
          type: array
        accrualPeriodicity:
          description: The frequency at which data set is published.
          enum:
          - Hourly
          - Daily
          - Three times a week
          - Semiweekly
          - Weekly
          - Three times a month
          - Biweekly
          - Semimonthly
          - Monthly
          - Bimonthly
          - Quarterly
          - Three times a year
          - Semiannual
          - Annual
          - Biennial
          - Triennial
          - Continuous
          - Irregular
          - continual
          - daily
          - weekly
          - fortnightly
          - monthly
          - quarterly
          - biannually
          - annually
          - asNeeded
          - irregular
          - notPlanned
          - unknown
          - null
          nullable: true
          type: string
        issued:
          description: The date when the data set was issued.
          nullable: true
          pattern: "^\\d{4}-[01]\\d-[0-3]\\d$"
          type: string
        createdAt:
          description: Data set creation timestamp.
          format: int64
          nullable: true
          type: number
        published:
          description: Data set publication timestamp.
          format: int64
          nullable: true
          type: number
        publishedStatus:
          $ref: '#/components/schemas/PublishedStatus'
        modified:
          description: An timestamp of when the data in this dataset was last updated
          nullable: true
          type: number
        category:
          $ref: '#/components/schemas/CategoryValue'
        visibility:
          description: Whether or not this data set should be displayed in the index.
          enum:
          - visible
          - hidden
          type: string
        pricingDescription:
          description: Pricing description of the data set.
          type: string
        distributions:
          items:
            $ref: '#/components/schemas/DataSet_distributions_inner'
          type: array
        approvalForAccessNumber:
          description: Approval for access status number
          nullable: true
          type: number
        approvalForAccessStatus:
          description: Approval for access status value
          enum:
          - AfA (Information Requests only)
          - AfA (Public Register)
          - AfA (Publication Scheme and Information for Re-Use Register)
          - AfA (Publication Scheme)
          - Not AfA (To be Assessessed with Guidance)
          - Not AfA (To be Assessed)
          - Not Applicable - Third Party Dataset
          - Open Data Risk Assessment
          - null
          nullable: true
          type: string
        contacts:
          description: List of contacts for this data set
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        metadataContact:
          $ref: '#/components/schemas/DataSetPatch_metadataContact'
        lineage:
          description: Information about the creation and quality assurance process
            of the dataset
          nullable: true
          type: string
        language:
          description: Language used on the data set
          nullable: true
          type: string
        characterSet:
          description: Character set used on the data set
          nullable: true
          type: string
        hierarchyLevel:
          description: Hierarchy level of the data set
          nullable: true
          type: string
        metadataLanguage:
          description: Language used on the metadata
          nullable: true
          type: string
        metadataCharacterSet:
          description: Character set used on the metadata
          nullable: true
          type: string
        metadataStandardName:
          nullable: true
          type: string
        metadataStandardVersion:
          nullable: true
          type: string
        coordinateReferenceSystemId:
          description: URL to the specification of the coordinate system used in the
            data
          nullable: true
          type: string
        spatialRepresentationType:
          description: Type of the geospatial data
          nullable: true
          type: string
      type: object
    EntryType:
      description: "The type of the entry, data set or model"
      enum:
      - model
      - dataSet
      type: string
    GroupCode:
      description: Name of group being harvested
      enum:
      - apha
      - defra
      - ea
      - ne
      - rpa
      type: string
    TemplateId:
      description: The ID of a template in the catalog
      format: uuid
      type: string
    Resource:
      example:
        private: true
        name: name
        description: description
        id: id
        url: url
      properties:
        description:
          description: Description of what the URL represents.
          type: string
        url:
          description: URL to obtain more information on this data set.
          type: string
        id:
          description: ID for this resource item.
          type: string
        name:
          description: Name for what the URL represents.
          type: string
        private:
          description: Indicates whether the resource metadata is sensitive data.
          type: boolean
      required:
      - url
      type: object
    Contact:
      example:
        positionName: positionName
        organisationName: organisationName
        emailAddress: emailAddress
        role: resourceProvider
        individualName: individualName
      properties:
        organisationName:
          description: Organisation name for this contact
          type: string
        individualName:
          description: Individual name for this contact
          type: string
        positionName:
          description: Position of this contact within their organisation
          type: string
        emailAddress:
          description: Email address for this contact
          type: string
        role:
          description: The role of this contact as it relates to the data set
          enum:
          - resourceProvider
          - custodian
          - owner
          - user
          - distributor
          - originator
          - pointOfContact
          - principalInvestigator
          - processor
          - publisher
          - author
          type: string
      required:
      - organisationName
      - role
      type: object
    PublicContact:
      example:
        organisationName: organisationName
        urlLabel: urlLabel
        emailAddress: emailAddress
        role: pointOfContact
        url: url
      properties:
        organisationName:
          description: Organisation name for this contact
          type: string
        url:
          description: Support url for this contact
          type: string
        urlLabel:
          description: Title of the support website
          type: string
        emailAddress:
          description: Email address for this contact
          type: string
        role:
          description: The role of this contact as it relates to the data set
          enum:
          - pointOfContact
          type: string
      required:
      - organisationName
      - role
      type: object
    CreateFromTemplatePayload:
      properties:
        title:
          description: Title for the data set.
          type: string
        description:
          description: Description of the data set.
          type: string
        templateId:
          description: The ID of a template in the catalog
          format: uuid
          type: string
        exchange:
          $ref: '#/components/schemas/Exchange'
      required:
      - templateId
      type: object
    DraftStatus:
      description: The workflow status of this data set's draft
      enum:
      - submitted
      - approved
      - rejected
      type: string
    PublishedStatus:
      description: The publication status of this data set. Published data-sets have
        been approved by an admin
      enum:
      - published
      - retired
      type: string
    ImageRepresentation:
      description: A data set image.
      example:
        author:
          name: name
          url: https://openapi-generator.tech
        type: type
        url: https://openapi-generator.tech
        thumbnailUrl: https://openapi-generator.tech
      properties:
        type:
          type: string
        url:
          format: uri
          type: string
        thumbnailUrl:
          format: uri
          type: string
        author:
          $ref: '#/components/schemas/ImageRepresentation_author'
      type: object
    EntryUpdateResponse:
      example:
        id: id
        status: status
      properties:
        status:
          description: A message describing the result of the operation
          type: string
        id:
          description: The ID for the new catalog entry.
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    IdentityInput:
      description: "An entity, such as a user or organisation."
      example:
        name: name
        id: id
        type: user
        email: email
      properties:
        id:
          description: "The Auth0 id of a user, or uuid of another identity"
          type: string
        email:
          description: The email address of a user
          type: string
        name:
          description: "The name of the user. Will be ignored, but allowed so GET\
            \ data can be round-tripped."
          type: string
        type:
          description: The type of the identity
          enum:
          - user
          - organisation
          - public
          type: string
      required:
      - type
      type: object
    Entitlement:
      enum:
      - read
      - write
      - grant
      type: string
    Entitlements:
      description: The entitlements an identity has on a resource
      example:
        catalog:
          read: true
          readSensitive: true
          write: true
        isAdmin: true
        dataSet:
          read: true
          write: true
      properties:
        catalog:
          $ref: '#/components/schemas/Entitlements_catalog'
        dataSet:
          $ref: '#/components/schemas/Entitlements_dataSet'
        isAdmin:
          type: boolean
      required:
      - catalog
      - isAdmin
      type: object
    BatchIdentityInputEntitlements:
      items:
        $ref: '#/components/schemas/BatchIdentityInputEntitlements_inner'
      type: array
    IdentityEntitlements:
      description: "Entitlements for an identity on a resource, and details of the\
        \ identity"
      example:
        entitlements:
          catalog:
            read: true
            readSensitive: true
            write: true
          isAdmin: true
          dataSet:
            read: true
            write: true
        identity:
          name: name
          id: id
          type: type
      properties:
        identity:
          $ref: '#/components/schemas/IdentityEntitlements_identity'
        entitlements:
          $ref: '#/components/schemas/Entitlements'
      type: object
    DataFormat:
      example:
        dataFormat: dataFormat
        version: version
      properties:
        version:
          type: string
        dataFormat:
          type: string
      required:
      - dataFormat
      type: object
    GeospatialExtent:
      example:
        northBoundLatitude: 5.637376656633329
        southBoundLatitude: 7.061401241503109
        eastBoundLongitude: 2.3021358869347655
        westBoundLongitude: 9.301444243932576
      properties:
        northBoundLatitude:
          type: number
        eastBoundLongitude:
          type: number
        southBoundLatitude:
          type: number
        westBoundLongitude:
          type: number
      required:
      - eastBoundLongitude
      - northBoundLatitude
      - southBoundLatitude
      - westBoundLongitude
      type: object
    SpatialCoverage:
      description: The geo spatial coverage of the data set.
      enum:
      - United Kingdom
      - England
      - Northern Ireland
      - Scotland
      - Wales
      - Canada
      - Ethiopia
      - France
      - India
      - Kenya
      - Mexico
      - Netherlands
      - Spain
      - Tanzania
      - Uganda
      - United States
      - Global only
      type: string
    CategoryValue:
      description: The value of the category
      enum:
      - free
      - standard
      - premium
      - on-request
      type: string
    TagValue:
      description: The value of the tag
      type: string
    Relationship:
      enum:
      - narrower
      - broader
      type: string
    Licence:
      description: Licensing information and access constraint
      example:
        attributionStatement: attributionStatement
        text: text
        useConstraints: useConstraints
        useLimitationStatement: useLimitationStatement
        url: url
      properties:
        text:
          description: the name or contents of the licence
          type: string
        url:
          description: link to the contents of the licence
          type: string
        useLimitationStatement:
          description: "INSPIRE Limitations On Public Access, see: https://inspire.ec.europa.eu/metadata-codelist/LimitationsOnPublicAccess"
          type: string
        attributionStatement:
          description: copyright statement
          type: string
        useConstraints:
          description: "INSPIRE Conditions Applying To Access and Use, see: https://inspire.ec.europa.eu/metadata-codelist/ConditionsApplyingToAccessAndUse"
          type: string
      required:
      - text
      type: object
    Topic:
      description: topic value
      enum:
      - farming
      - biota
      - boundaries
      - climatologyMeteorologyAtmosphere
      - economy
      - elevation
      - environment
      - geoscientificInformation
      - health
      - imageryBaseMapsEarthCover
      - intelligenceMilitary
      - inlandWaters
      - location
      - oceans
      - planningCadastre
      - society
      - structure
      - transportation
      - utilitiesCommunication
      type: string
    WorkflowKeywords:
      description: Workflow keyword value
      enum:
      - OpenData
      - NonSpatial
      - NotOpen
      - ConditionalData
      - PartnerDataset
      - InternalOnly
      - ThirdParty
      - DatasetBundle
      - RetiredOpenData
      - RetiredNotOpen
      - RetiredConditionalData
      - RetiredPartnerDataset
      - RetiredInternalOnly
      - RetiredThirdParty
      - RetiredDatasetBundle
      - RetiredNonSpatial
      type: string
    TaxonomyKeywords:
      description: Taxonomy keyword values
      example:
        valueLabel: hydrology
        sourceUri: http://inspire.ec.europa.eu/theme
        sourceLabel: "GEMET - INSPIRE themes, version 1.0"
        valueUri: http://www.eionet.europa.eu/gemet/concept/4118
      properties:
        valueUri:
          example: http://www.eionet.europa.eu/gemet/concept/4118
          type: string
          x-konfig-original-example: http://www.eionet.europa.eu/gemet/concept/4118
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TaxonomyKeywords-properties-valueUri
        valueLabel:
          example: hydrology
          type: string
          x-konfig-original-example: hydrology
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TaxonomyKeywords-properties-valueLabel
        sourceUri:
          example: http://inspire.ec.europa.eu/theme
          type: string
          x-konfig-original-example: http://inspire.ec.europa.eu/theme
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TaxonomyKeywords-properties-sourceUri
        sourceLabel:
          example: "GEMET - INSPIRE themes, version 1.0"
          type: string
          x-konfig-original-example: "GEMET - INSPIRE themes, version 1.0"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TaxonomyKeywords-properties-sourceLabel
      required:
      - sourceLabel
      - sourceUri
      - valueLabel
      - valueUri
      type: object
    AccrualPeriodicity:
      description: Accrual periodicity options
      enum:
      - Hourly
      - Daily
      - Three times a week
      - Semiweekly
      - Weekly
      - Three times a month
      - Biweekly
      - Semimonthly
      - Monthly
      - Bimonthly
      - Quarterly
      - Three times a year
      - Semiannual
      - Annual
      - Biennial
      - Triennial
      - Continuous
      - Irregular
      - continual
      - daily
      - weekly
      - fortnightly
      - monthly
      - quarterly
      - biannually
      - annually
      - asNeeded
      - irregular
      - notPlanned
      - unknown
      type: string
    AuthenticationGetJwtRequest:
      example:
        password: password
        username: username
      properties:
        username:
          description: Agrimetrics Catalog username
          type: string
        password:
          description: Agrimetrics Catalog password
          type: string
      type: object
    QueryLayerCutShapeBoundaryAndRetrieveRequest:
      type: object
    QueryLayerCutShapeBoundaryAndRetrieveRequest1:
      format: binary
      type: string
    ManageDatasetIngestFileNewLayerRequest:
      example:
        fileUri: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
      properties:
        fileUri:
          example: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
          type: string
          x-konfig-original-example: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManageDatasetIngestFileNewLayerRequest-properties-fileUri
      required:
      - fileUri
      type: object
    ShapefileConvertToGeoJsonRequest:
      format: binary
      type: string
    ManageLayerAddGeoTiffRequest:
      properties:
        datetime:
          example: 20130310T180000Z
          pattern: "[0-9]{8}T[0-9]{6}Z"
          type: string
          x-konfig-original-example: 20130310T180000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ISO8601Datetime
        file:
          description: The file to upload.
          format: binary
          type: string
      type: object
    ManageLayerIngestFileRequest:
      example:
        fileName: samplehabitats.zip
        datetime: 20130310T180000Z
        fileId: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
      properties:
        fileId:
          example: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
          type: string
          x-konfig-original-example: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManageLayerIngestFileRequest-properties-fileId
        fileName:
          example: samplehabitats.zip
          pattern: ".((tif[f]?)|zip)$"
          type: string
          x-konfig-original-example: samplehabitats.zip
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManageLayerIngestFileRequest-properties-fileName
        datetime:
          example: 20130310T180000Z
          pattern: "[0-9]{8}T[0-9]{6}Z"
          type: string
          x-konfig-original-example: 20130310T180000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ISO8601Datetime
      required:
      - fileId
      type: object
    ManageLayerSetStyleRequest:
      properties:
        file:
          format: binary
          type: string
      type: object
    QueryLayerSearchGeometryRequest: {}
    QueryLayerCalculateCostRequest: {}
    QueryLayerCalculateStatisticsWithinGeometryRequest:
      example:
        geometry: ""
        time: 2017-01-01T00:00:00Z
      properties:
        geometry: {}
        time:
          example: 2017-01-01T00:00:00Z
          format: date-time
          type: string
          x-konfig-original-example: 2017-01-01T00:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-QueryLayerCalculateStatisticsWithinGeometryRequest-properties-time
      required:
      - geometry
      type: object
    ServiceDefinitionUpdateExistingDefinitionRequest:
      example:
        defaultEPSGCode: 4326
        billable:
          billingCreditCost: 0.8008281904610115
          billingCreditType: billingCreditType
          billingDataType: billingDataType
      properties:
        billable:
          $ref: '#/components/schemas/Billable'
        defaultEPSGCode:
          example: 4326
          type: number
          x-konfig-original-example: 4326
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinitionUpdateExistingDefinitionRequest-properties-defaultEPSGCode
      type: object
    DataRequestUpdateRequestRequest:
      example:
        status: cancelled
      properties:
        status:
          description: The status of the data request
          enum:
          - cancelled
          - pending
          type: string
      type: object
    WfsQueryDataOpenGisRequest:
      type: object
    DatasetCreateSingleCatalogEntryRequest: {}
    StatusSetDraftStatusRequest:
      example:
        notes: notes
        status: ""
      properties:
        status: {}
        notes:
          description: Any notes added during review of the data set
          type: string
      required:
      - status
      type: object
    DatasetSetEntitlementsRequest:
      example:
        entitlements:
        - entitlements:
            catalog:
              read: true
              readSensitive: true
              write: true
            isAdmin: true
            dataSet:
              read: true
              write: true
          identity:
            name: name
            id: id
            type: user
            email: email
        - entitlements:
            catalog:
              read: true
              readSensitive: true
              write: true
            isAdmin: true
            dataSet:
              read: true
              write: true
          identity:
            name: name
            id: id
            type: user
            email: email
      properties:
        entitlements:
          items:
            $ref: '#/components/schemas/BatchIdentityInputEntitlements_inner'
          type: array
      required:
      - entitlements
      type: object
    AccessRequestCreateNewRequestRequest:
      example:
        requestMessage: requestMessage
        requesterEmail: requesterEmail
        dataSetId: 97130f06-6242-463f-bf19-0dd6f5a58cfb
        requestingEntityId: requestingEntityId
        requesterName: requesterName
      properties:
        dataSetId:
          description: The ID of a dataset in the catalog
          example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          format: uuid
          type: string
          x-konfig-original-example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DatasetId
        requestingEntityId:
          description: ID for the entity which is requesting access.
          type: string
        requesterName:
          description: Name of the user who requested access.
          type: string
        requesterEmail:
          description: Contact email address for the user who requested access.
          type: string
        requestMessage:
          description: Free text message provided by the user when requesting access.
          type: string
      required:
      - dataSetId
      - requestMessage
      - requestingEntityId
      type: object
    ImportDataSetsRequest:
      format: binary
      type: string
    AuthenticationGetJwtResponse:
      example:
        jwts:
          agrimetrics:
            access_token: 9d7e80a0-ad76-4a5c-8810-91ffc9d5858f
            token_type: Bearer
      properties:
        jwts:
          $ref: '#/components/schemas/AuthenticationGetJwtResponse_jwts'
      type: object
      x-konfig-is-used-in-successful-response: true
    AuthenticationGetJwt400Response:
      properties: {}
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    StatusGetCatalogApiStatusResponse:
      example:
        _links:
          self:
            href: href
        version: version
      properties:
        version:
          type: string
        _links:
          $ref: '#/components/schemas/StatusGetCatalogApiStatusResponse__links'
      required:
      - _links
      - version
      type: object
      x-konfig-is-used-in-successful-response: true
    QueryLayerCutShapeBoundaryAndRetrieveResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    QueryLayerCutShapeBoundaryAndRetrieve200Response:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    QueryLayerCutShapeBoundaryAndRetrieve403Response:
      properties:
        message:
          type: string
      required:
      - message
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    QueryLayerCutShapeBoundaryAndRetrieve404Response:
      properties:
        message:
          type: string
      required:
      - message
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    QueryLayerCutShapeBoundaryAndRetrieve406Response:
      properties:
        message:
          type: string
      required:
      - message
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    QueryDatasetListLayersWithinDatasetResponse:
      example:
        layers:
        - layerId: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          description: Geospatial Layer
          links:
            search: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
            self: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
        - layerId: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          description: Geospatial Layer
          links:
            search: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
            self: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
      properties:
        layers:
          items:
            $ref: '#/components/schemas/Layer'
          type: array
      required:
      - layers
      type: object
      x-konfig-is-used-in-successful-response: true
    QueryDatasetListLayersWithinDataset403Response:
      properties:
        message:
          type: string
      required:
      - message
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    QueryDatasetListLayersWithinDataset404Response:
      properties:
        message:
          type: string
      required:
      - message
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    QueryLayerMetadataResponse:
      example:
        times:
        - 2018-01-01T00:00:00.000Z
        - 2019-01-01T00:00:00.000Z
        outputFormats:
        - null
        - null
        layerId: 97130f06-6242-463f-bf19-0dd6f5a58cfb
        description: Geospatial Layer
        links:
          search: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
          self: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
        geometry:
          coordinates:
            minlon: 2.1234234
            maxlat: -1.1234234
            minlat: -1.1234234
            maxlon: 2.1234234
          type: bounding-box
      properties:
        description:
          example: Geospatial Layer
          type: string
          x-konfig-original-example: Geospatial Layer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-QueryLayerMetadataResponse-properties-description
        layerId:
          example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          type: string
          x-konfig-original-example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-QueryLayerMetadataResponse-properties-layerId
        links:
          $ref: '#/components/schemas/QueryLayerMetadataResponse_links'
        geometry:
          $ref: '#/components/schemas/BoundingBox'
        times:
          example:
          - 2018-01-01T00:00:00.000Z
          - 2019-01-01T00:00:00.000Z
          items:
            format: date-time
            type: string
          type: array
          x-konfig-original-example:
          - 2018-01-01T00:00:00.000Z
          - 2019-01-01T00:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Times
        outputFormats:
          items:
            $ref: '#/components/schemas/OutputFormats'
          type: array
      required:
      - description
      - geometry
      - layerId
      - links
      - outputFormats
      type: object
      x-konfig-is-used-in-successful-response: true
    ManageLayerAddGeoTiffResponse:
      example:
        message: message
      properties:
        message:
          type: string
      required:
      - message
      type: object
      x-konfig-is-used-in-successful-response: true
    ManageLayerSetStyleResponse:
      example: {}
      properties: {}
      type: object
      x-konfig-original-example: {}
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManageLayerSetStyleResponse
      x-konfig-is-used-in-successful-response: true
    DataRequestCreateSingleAccessRequestResponse:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    DataRequestUpdateRequestResponse:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    DataRequestGetResultsResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    DataRequestGetResults200Response:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    DataRequestGetResults406Response:
      properties:
        message:
          type: string
      required:
      - message
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    WmsQueryLayerWithOpenGisResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    WmsQueryWithOpenGisResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    WmtsQueryDataSetWmtsResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    WfsQueryDataWithOpenGisResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    WfsQueryDataOpenGisResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    WfsQueryDataOpenGis200Response:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcapiFeaturesQueryResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcapiQueryFeaturesOpenapiResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcapiFeaturesQueryConformanceResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcapiQueryFeaturesFunctionResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcapiQueryFeaturesCollectionResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcapiFeaturesQueryOgcResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcapiFeaturesQueryablesResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcapiQueryFeaturesCollectionItemsResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcapiFeaturesQuery200Response:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcApiTilesQueryTilesV1Response:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcApiTilesGetConformanceResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcApiTilesQueryCollectionsResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcApiTilesQueryCollectionByIdResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcApiTilesQueryCollectionQueryablesResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcApiTilesGetTilesCollectionResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcApiTilesGetQueryTilesCollectionResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcApiTilesQueryTileMatrixSetsResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    OgcApiTilesQueryTileMatrixSets200Response:
      type: string
      x-konfig-is-used-in-successful-response: true
    WmtsRestQueryTilejsonImageFormatResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    WmtsRestQueryTileMatrixSetResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    WmtsRestServiceQueryResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    WcsQueryDataResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    WcsQueryData200Response:
      type: string
      x-konfig-is-used-in-successful-response: true
    EsriRestServiceQueryResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    EsriRestServiceQuery200Response:
      type: string
      x-konfig-is-used-in-successful-response: true
    DatasetListValidTagsResponse:
      example:
        tags:
        - label: label
          type: tag
          value: value
        - label: label
          type: tag
          value: value
      properties:
        tags:
          items:
            $ref: '#/components/schemas/TagOrConcept'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    DataSetListAllDataSetsResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    DatasetDeleteSingleDataSetResponse:
      example:
        id: id
        status: status
      properties:
        status:
          type: string
        id:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    DatasetGetSingleCatalogEntryResponse:
      type: object
      x-konfig-is-used-in-successful-response: true
    DatasetGetFileDatasetIdResponse:
      example:
        fileDatasetId: fileDatasetId
      properties:
        fileDatasetId:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    DatasetCreateFileDatasetResponse:
      example:
        fileDatasetId: fileDatasetId
      properties:
        fileDatasetId:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    DatasetGetEntitlementsResponse:
      example:
        entitlements:
        - entitlements:
            catalog:
              read: true
              readSensitive: true
              write: true
            isAdmin: true
            dataSet:
              read: true
              write: true
          identity:
            name: name
            id: id
            type: type
        - entitlements:
            catalog:
              read: true
              readSensitive: true
              write: true
            isAdmin: true
            dataSet:
              read: true
              write: true
          identity:
            name: name
            id: id
            type: type
      properties:
        entitlements:
          items:
            $ref: '#/components/schemas/IdentityEntitlements'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    DatasetSetEntitlementsResponse:
      example: {}
      properties: {}
      type: object
      x-konfig-original-example: {}
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-DatasetSetEntitlementsResponse
      x-konfig-is-used-in-successful-response: true
    DatasetGetValidationReportResponse:
      example:
        valid: true
        errorMessages:
        - errorMessages
        - errorMessages
      properties:
        valid:
          type: boolean
        errorMessages:
          items:
            type: string
          type: array
      required:
      - errorMessages
      - valid
      type: object
      x-konfig-is-used-in-successful-response: true
    DatasetGetValidationReport200Response:
      example:
        valid: true
        errorMessages:
        - errorMessages
        - errorMessages
      properties:
        valid:
          type: boolean
        errorMessages:
          items:
            type: string
          type: array
      required:
      - errorMessages
      - valid
      type: object
      x-konfig-is-used-in-successful-response: true
    AccessRequestListResponse:
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    TemplateListPermissionsToViewResponse:
      example:
        templates:
        - null
        - null
      properties:
        templates:
          items:
            $ref: '#/components/schemas/DataSetTemplateEntity'
          type: array
      required:
      - templates
      type: object
      x-konfig-is-used-in-successful-response: true
    HarvestXmlDataOnGroupResponse:
      type: object
      x-konfig-is-used-in-successful-response: true
    HarvestXmlDataOnGroupPostResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    HarvestXmlDataOnGroupPost400Response:
      type: string
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    DatasetGetNonSpatialDataForGroupResponse:
      type: object
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-paths--layers-layerId-files-delete-parameters-1-schema:
      example: https://api-test.agrimetrics.co.uk/file-management/data-sets/11111111-2222-3333-4444-55555555555/files/example.zip
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--layers-layerId-files-delete-parameters-2-schema:
      example: example.tif
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--layers-layerId-style-post-parameters-1-schema:
      example: LU_CODE
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--data-sets-get-parameters-0-schema-items:
      example: 52178729-7b5a-4e34-8989-3d2fc8e7a371
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--data-sets-get-parameters-1-schema-items:
      example: Agrimetrics
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--data-sets-get-parameters-7-schema:
      example: Weather
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--data-sets-get-parameters-8-schema:
      example: Soil
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--data-sets-get-parameters-9-schema-items:
      example: PUBLIC
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--data-sets-get-parameters-21-schema-items:
      example: Environment Agency Metadata Profile
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--data-sets-get-parameters-24-schema-items:
      example: Open Government Licence
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--images-imageType-imageId-get-parameters-2-schema:
      example: "false"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--harvest-group-csw-parameters-4-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--harvest-group-csw-parameters-5-schema:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RestError-properties-message:
      example: Error Message
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-NewLayers-properties-layerId:
      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CostSummary-properties-totalCost:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CostSummary-properties-numberOfChargeableItems:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CostSummary-properties-totalNumberOfItems:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GeoJSONPolygon-properties-coordinates-items:
      example:
      - - -1.3623046875
        - 52.8691297276852
      - - -1.16455078125
        - 52.736291655910925
      - - -0.9228515625
        - 52.65639394198803
      - - -0.37353515625
        - 52.76289173758374
      - - -1.3623046875
        - 52.8691297276852
      items:
        items:
          example: -1.3623046875
          type: number
        type: array
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GeoJSONMultiPolygon-properties-coordinates-items-items:
      example:
      - - -1.3623046875
        - 52.8691297276852
      - - -1.16455078125
        - 52.736291655910925
      - - -0.9228515625
        - 52.65639394198803
      - - -0.37353515625
        - 52.76289173758374
      - - -1.3623046875
        - 52.8691297276852
      items:
        items:
          example: -1.3623046875
          type: number
        type: array
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Band-properties-index:
      example: Band 1
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Band-properties-stats-properties-min:
      example: 14
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Band-properties-stats-properties-mean:
      example: 47.695621490478516
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Band-properties-stats-properties-median:
      example: 43
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Band-properties-stats-properties-max:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Band-properties-stats-properties-std:
      example: 20.756450653076172
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Band-properties-totalNumPixels:
      example: 128288
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Band-properties-pixelCounts:
      example:
        "14.0": 3
        "15.0": 43
        "16.0": 192
        "17.0": 397
        "18.0": 734
      properties:
        "14.0":
          example: 3
          type: number
        "15.0":
          example: 43
          type: number
        "16.0":
          example: 192
          type: number
        "17.0":
          example: 397
          type: number
        "18.0":
          example: 734
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Layer-properties-description:
      example: Geospatial Layer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Layer-properties-layerId:
      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Layer-properties-links-properties-self:
      example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Layer-properties-links-properties-search:
      example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EPSG4326Longitude:
      example: 2.1234234
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EPSG4326Latitude:
      example: -1.1234234
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GeoJSONPoint-properties-coordinates:
      example:
      - -91.85
      - 15.52
      items:
        example: -91.85
        type: number
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Times:
      example:
      - 2018-01-01T00:00:00.000Z
      - 2019-01-01T00:00:00.000Z
      items:
        example: 2018-01-01T00:00:00.000Z
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ISO8601Datetime:
      example: 20130310T180000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DatasetId:
      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LayerId:
      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PolygonOrBBoxSearchBase-properties-time:
      example: 2017-01-01T00:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PointSearchBase-properties-distance:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PointSearchBase-properties-time:
      example: 2017-01-01T00:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinition-properties-datasetId:
      example: a420450f-ef42-4fc9-a137-69456bdad016
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinition-properties-layerName:
      example: Geospatial Layer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinition-properties-temporal:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinition-properties-datastore:
      example: Datastore Name
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinition-properties-geoserverHostName:
      example: geoserver-test.agrimetrics.co.uk
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinition-properties-geometryField:
      example: geom
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinition-properties-defaultEPSGCode:
      example: 4326
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-layerId:
      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-datasetId:
      example: a420450f-ef42-4fc9-a137-69456bdad016
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-layerName:
      example: Geospatial Layer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-temporal:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-datastore:
      example: Datastore Name
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-geoserverHostName:
      example: geoserver-test.agrimetrics.co.uk
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-geometryField:
      example: geom
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinitionResponse-properties-defaultEPSGCode:
      example: 4326
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RequestId:
      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TaxonomyKeywords-properties-valueUri:
      example: http://www.eionet.europa.eu/gemet/concept/4118
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TaxonomyKeywords-properties-valueLabel:
      example: hydrology
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TaxonomyKeywords-properties-sourceUri:
      example: http://inspire.ec.europa.eu/theme
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TaxonomyKeywords-properties-sourceLabel:
      example: "GEMET - INSPIRE themes, version 1.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManageDatasetIngestFileNewLayerRequest-properties-fileUri:
      example: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManageLayerIngestFileRequest-properties-fileId:
      example: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManageLayerIngestFileRequest-properties-fileName:
      example: samplehabitats.zip
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-QueryLayerCalculateStatisticsWithinGeometryRequest-properties-time:
      example: 2017-01-01T00:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ServiceDefinitionUpdateExistingDefinitionRequest-properties-defaultEPSGCode:
      example: 4326
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-AuthenticationGetJwtResponse-properties-jwts-properties-agrimetrics-properties-token_type
    : example: Bearer
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-AuthenticationGetJwtResponse-properties-jwts-properties-agrimetrics-properties-access_token
    : example: 9d7e80a0-ad76-4a5c-8810-91ffc9d5858f
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-QueryLayerMetadataResponse-properties-description:
      example: Geospatial Layer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-QueryLayerMetadataResponse-properties-layerId:
      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-QueryLayerMetadataResponse-properties-links-properties-self:
      example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-QueryLayerMetadataResponse-properties-links-properties-search:
      example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManageLayerSetStyleResponse:
      example: {}
      properties: {}
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DatasetSetEntitlementsResponse:
      example: {}
      properties: {}
      type: object
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-post--authenticate:
      properties:
        username:
          description: Agrimetrics Catalog username
          type: string
        password:
          description: Agrimetrics Catalog password
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--status:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--query:
      properties:
        layer:
          items:
            $ref: '#/components/schemas/LayerId'
          type: array
      required:
      - layer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layer
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-post--datasets-datasetId-layers:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        fileUri:
          example: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
          type: string
          x-konfig-original-example: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManageDatasetIngestFileNewLayerRequest-properties-fileUri
      required:
      - datasetId
      - fileUri
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-post--shapefile:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--layers-layerId:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
      required:
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-get--layers-layerId:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
      required:
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-patch--layers-layerId:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
        datetime:
          $ref: '#/components/schemas/ISO8601Datetime'
        file:
          description: The file to upload.
          format: binary
          type: string
      required:
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-delete--layers-layerId-files:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
        fileUri:
          example: https://api-test.agrimetrics.co.uk/file-management/data-sets/11111111-2222-3333-4444-55555555555/files/example.zip
          format: uri
          pattern: .zip$
          type: string
          x-konfig-original-example: https://api-test.agrimetrics.co.uk/file-management/data-sets/11111111-2222-3333-4444-55555555555/files/example.zip
          x-konfig-generated-schema: konfig-generated-schema-paths--layers-layerId-files-delete-parameters-1-schema
        filename:
          example: example.tif
          pattern: ".tif[f]?$"
          type: string
          x-konfig-original-example: example.tif
          x-konfig-generated-schema: konfig-generated-schema-paths--layers-layerId-files-delete-parameters-2-schema
      required:
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
      - fileUri
      - filename
    konfig-generated-schema-single-parameter-schema-post--layers-layerId-ingest:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
        fileId:
          example: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
          type: string
          x-konfig-original-example: https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManageLayerIngestFileRequest-properties-fileId
        fileName:
          example: samplehabitats.zip
          pattern: ".((tif[f]?)|zip)$"
          type: string
          x-konfig-original-example: samplehabitats.zip
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManageLayerIngestFileRequest-properties-fileName
        datetime:
          $ref: '#/components/schemas/ISO8601Datetime'
      required:
      - fileId
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-delete--layers-layerId-style:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
      required:
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-get--layers-layerId-style:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
      required:
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-post--layers-layerId-style:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
        key:
          description: The column name used for the legend
          example: LU_CODE
          type: string
          x-konfig-original-example: LU_CODE
          x-konfig-generated-schema: konfig-generated-schema-paths--layers-layerId-style-post-parameters-1-schema
      required:
      - key
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
      - key
    konfig-generated-schema-single-parameter-schema-put--layers-layerId-style:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
        file:
          format: binary
          type: string
      required:
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-post--layers-layerId-search:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
        geometry:
          $ref: '#/components/schemas/GeoJSONPoint'
        distance:
          example: 10
          minimum: 10
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PointSearchBase-properties-distance
        time:
          example: 2017-01-01T00:00:00Z
          format: date-time
          type: string
          x-konfig-original-example: 2017-01-01T00:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PointSearchBase-properties-time
        outputFormat:
          $ref: '#/components/schemas/OutputFormats'
      required:
      - distance
      - geometry
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-post--layers-layerId-search-cost:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
        geometry:
          $ref: '#/components/schemas/GeoJSONPoint'
        distance:
          example: 10
          minimum: 10
          type: integer
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PointSearchBase-properties-distance
        time:
          example: 2017-01-01T00:00:00Z
          format: date-time
          type: string
          x-konfig-original-example: 2017-01-01T00:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PointSearchBase-properties-time
      required:
      - distance
      - geometry
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-post--layers-layerId-search-statistics:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
        geometry:
          $ref: '#/components/schemas/GeneralGeometry'
        time:
          example: 2017-01-01T00:00:00Z
          format: date-time
          type: string
          x-konfig-original-example: 2017-01-01T00:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-QueryLayerCalculateStatisticsWithinGeometryRequest-properties-time
      required:
      - geometry
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-post--serviceDefinition:
      properties:
        datasetId:
          example: a420450f-ef42-4fc9-a137-69456bdad016
          type: string
          x-konfig-original-example: a420450f-ef42-4fc9-a137-69456bdad016
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-datasetId
        layerName:
          example: Geospatial Layer
          type: string
          x-konfig-original-example: Geospatial Layer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-layerName
        service:
          enum:
          - WCS
          - WFS
          type: string
        WFS:
          enum:
          - "Y"
          - "N"
          type: string
        WCS:
          enum:
          - "Y"
          - "N"
          type: string
        WMS:
          enum:
          - "Y"
          - "N"
          type: string
        WMTS:
          enum:
          - "Y"
          - "N"
          type: string
        OGCApiFeatures:
          enum:
          - "Y"
          - "N"
          type: string
        OGCApiTiles:
          enum:
          - "Y"
          - "N"
          type: string
        temporal:
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-temporal
        datastore:
          example: Datastore Name
          type: string
          x-konfig-original-example: Datastore Name
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-datastore
        geoserverHostName:
          example: geoserver-test.agrimetrics.co.uk
          type: string
          x-konfig-original-example: geoserver-test.agrimetrics.co.uk
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-geoserverHostName
        geometryField:
          example: geom
          type: string
          x-konfig-original-example: geom
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-geometryField
        billable:
          $ref: '#/components/schemas/Billable'
        defaultEPSGCode:
          example: 4326
          type: number
          x-konfig-original-example: 4326
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinition-properties-defaultEPSGCode
      required:
      - OGCApiFeatures
      - OGCApiTiles
      - WCS
      - WFS
      - WMS
      - WMTS
      - datasetId
      - layerName
      - service
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--serviceDefinition-layerId:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
      required:
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-get--serviceDefinition-layerId:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
      required:
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-patch--serviceDefinition-layerId:
      properties:
        layerId:
          $ref: '#/components/schemas/LayerId'
        billable:
          $ref: '#/components/schemas/Billable'
        defaultEPSGCode:
          example: 4326
          type: number
          x-konfig-original-example: 4326
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ServiceDefinitionUpdateExistingDefinitionRequest-properties-defaultEPSGCode
      required:
      - layerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - layerId
    konfig-generated-schema-single-parameter-schema-get--data-requests:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--data-requests:
      properties:
        projectName:
          description: The name of the project the data is for
          type: string
        projectManagerName:
          description: The name of the project manager who can approve the request
          type: string
        projectManagerEmail:
          description: The email address of the project manager who can approve the
            request
          type: string
        datasetId:
          description: The ID of the dataset that the data request relates to
          format: uuid
          type: string
        datasetName:
          description: The name of the dataset that the data request relates to
          type: string
        geoJsonAOI:
          description: The area of interest that the user is requesting access to
            as a stringified GeoJSON
          type: string
        shapefileAOI:
          description: The area of interest that the user is requesting access to
            as a zipped shapefile
          format: binary
          type: string
        requestedFormat:
          description: The format the user would like the data to be provided in
          enum:
          - application/geo+json
          - application/gml+xml; version=3.2
          - application/vnd.google-earth.kml+xml
          - application/zipped-shapefile
          - application/x.gdb+zip
          - application/x.mid-mif+zip
          - application/x.tab+zip
          - application/dxf
          - image/tiff
          type: string
      required:
      - datasetId
      - datasetName
      - projectManagerEmail
      - projectManagerName
      - projectName
      - requestedFormat
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--data-requests-requestId:
      properties:
        requestId:
          $ref: '#/components/schemas/RequestId'
      required:
      - requestId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - requestId
    konfig-generated-schema-single-parameter-schema-patch--data-requests-requestId:
      properties:
        requestId:
          $ref: '#/components/schemas/RequestId'
        status:
          description: The status of the data request
          enum:
          - cancelled
          - pending
          type: string
      required:
      - requestId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - requestId
    konfig-generated-schema-single-parameter-schema-get--data-requests-uniqueLinkId-approve:
      properties:
        uniqueLinkId:
          $ref: '#/components/schemas/uniqueLinkId'
      required:
      - uniqueLinkId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - uniqueLinkId
    konfig-generated-schema-single-parameter-schema-get--data-requests-uniqueLinkId-reject:
      properties:
        uniqueLinkId:
          $ref: '#/components/schemas/uniqueLinkId'
      required:
      - uniqueLinkId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - uniqueLinkId
    konfig-generated-schema-single-parameter-schema-get--data-requests-uniqueLinkId-geometry:
      properties:
        uniqueLinkId:
          $ref: '#/components/schemas/uniqueLinkId'
      required:
      - uniqueLinkId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - uniqueLinkId
    konfig-generated-schema-single-parameter-schema-get--data-requests-requestId-download:
      properties:
        requestId:
          $ref: '#/components/schemas/RequestId'
      required:
      - requestId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - requestId
    konfig-generated-schema-single-parameter-schema-get--datasets-swagger-ui-swaggerFile:
      properties:
        swaggerFile:
          type: string
      required:
      - swaggerFile
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - swaggerFile
    konfig-generated-schema-single-parameter-schema-get--datasets-apicss-cssFile:
      properties:
        cssFile:
          type: string
      required:
      - cssFile
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cssFile
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wms:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-head--datasets-datasetId-wms:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wmts:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wfs:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-head--datasets-datasetId-wfs:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-post--datasets-datasetId-wfs:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-openapi:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-conformance:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-functions:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-collections:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-collections-collectionId:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        collectionId:
          type: string
      required:
      - collectionId
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - collectionId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-collections-collectionId-queryables:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        collectionId:
          type: string
      required:
      - collectionId
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - collectionId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-collections-collectionId-items:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        collectionId:
          type: string
      required:
      - collectionId
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - collectionId
    ? konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-features-v1-collections-collectionId-items-featureId
    : properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        collectionId:
          type: string
        featureId:
          type: string
      required:
      - collectionId
      - datasetId
      - featureId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - collectionId
      - featureId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-conformance:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-collections:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-collections-collectionId:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        collectionId:
          type: string
      required:
      - collectionId
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - collectionId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-collections-collectionId-queryables:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        collectionId:
          type: string
      required:
      - collectionId
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - collectionId
    ? konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-collections-collectionId-tiles-tileMatrixSetId
    : properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        collectionId:
          type: string
        tileMatrixSetId:
          type: string
      required:
      - collectionId
      - datasetId
      - tileMatrixSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - collectionId
      - tileMatrixSetId
    ? konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-collections-collectionId-map-tiles-tileMatrixSetId-tileMatrix-tileRow-tileCol
    : properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        collectionId:
          type: string
        tileMatrixSetId:
          type: string
        tileMatrix:
          type: string
        tileRow:
          type: integer
        tileCol:
          type: integer
        f:
          type: string
      required:
      - collectionId
      - datasetId
      - f
      - tileCol
      - tileMatrix
      - tileMatrixSetId
      - tileRow
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - collectionId
      - tileMatrixSetId
      - tileMatrix
      - tileRow
      - tileCol
      - f
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-tileMatrixSets:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-ogc-tiles-v1-tileMatrixSets-tileMatrixSetId:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        tileMatrixSetId:
          type: string
      required:
      - datasetId
      - tileMatrixSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - tileMatrixSetId
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wmts-rest-layerName-style-tilejson-imageFormat:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        layerName:
          type: string
        style:
          type: string
        imageFormat:
          type: string
        format:
          type: string
      required:
      - datasetId
      - format
      - imageFormat
      - layerName
      - style
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - layerName
      - style
      - imageFormat
      - format
    ? konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wmts-rest-layerName-style-TileMatrixSet-TileMatrix-TileRow-TileCol
    : properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        layerName:
          type: string
        style:
          type: string
        TileMatrixSet:
          type: string
        TileMatrix:
          type: string
        TileRow:
          minimum: 0
          type: integer
        TileCol:
          minimum: 0
          type: integer
        format:
          type: string
      required:
      - TileCol
      - TileMatrix
      - TileMatrixSet
      - TileRow
      - datasetId
      - format
      - layerName
      - style
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - layerName
      - style
      - TileMatrixSet
      - TileMatrix
      - TileRow
      - TileCol
      - format
    ? konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wmts-rest-layerName-style-TileMatrixSet-TileMatrix-TileRow-TileCol-J-I
    : properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        layerName:
          type: string
        style:
          type: string
        TileMatrixSet:
          type: string
        TileMatrix:
          type: string
        TileRow:
          minimum: 0
          type: integer
        TileCol:
          minimum: 0
          type: integer
        J:
          type: integer
        I:
          type: integer
        format:
          type: string
      required:
      - I
      - J
      - TileCol
      - TileMatrix
      - TileMatrixSet
      - TileRow
      - datasetId
      - format
      - layerName
      - style
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - layerName
      - style
      - TileMatrixSet
      - TileMatrix
      - TileRow
      - TileCol
      - J
      - I
      - format
    konfig-generated-schema-single-parameter-schema-get--datasets-datasetId-wcs:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-head--datasets-datasetId-wcs:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - datasetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
    konfig-generated-schema-single-parameter-schema-get--rest-services-datasetId-paramOne:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        paramOne:
          type: string
      required:
      - datasetId
      - paramOne
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - paramOne
    konfig-generated-schema-single-parameter-schema-get--rest-services-datasetId-paramOne-paramTwo:
      properties:
        datasetId:
          $ref: '#/components/schemas/DatasetId'
        paramOne:
          type: string
        paramTwo:
          type: string
      required:
      - datasetId
      - paramOne
      - paramTwo
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - datasetId
      - paramOne
      - paramTwo
    konfig-generated-schema-single-parameter-schema-get--categories:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--tags:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--linked-data-concepts:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--data-sets:
      properties:
        ids:
          items:
            example: 52178729-7b5a-4e34-8989-3d2fc8e7a371
            type: string
            x-konfig-original-example: 52178729-7b5a-4e34-8989-3d2fc8e7a371
            x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-0-schema-items
          type: array
        creator:
          items:
            example: Agrimetrics
            type: string
            x-konfig-original-example: Agrimetrics
            x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-1-schema-items
          type: array
        keywords:
          items:
            $ref: '#/components/schemas/TagValue'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagValue'
          type: array
        tagRelationship:
          $ref: '#/components/schemas/Relationship'
        category:
          items:
            $ref: '#/components/schemas/CategoryValue'
          type: array
        spatialCoverage:
          items:
            $ref: '#/components/schemas/SpatialCoverage'
          type: array
        text:
          example: Weather
          type: string
          x-konfig-original-example: Weather
          x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-7-schema
        extendedText:
          example: Soil
          type: string
          x-konfig-original-example: Soil
          x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-8-schema
        identities:
          items:
            example: PUBLIC
            type: string
            x-konfig-original-example: PUBLIC
            x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-9-schema-items
          type: array
        onlyFeatured:
          type: boolean
        showEditable:
          type: boolean
        showHidden:
          type: boolean
        pageNum:
          minimum: 1
          type: integer
        pageSize:
          minimum: 1
          type: integer
        offset:
          minimum: 0
          type: integer
        searchType:
          enum:
          - title
          - all
          type: string
        limit:
          minimum: 1
          type: integer
        legacyConcepts:
          type: boolean
        sort:
          enum:
          - title
          - title-descending
          - relevance
          type: string
        exchange:
          $ref: '#/components/schemas/Exchange'
        metadataStandardName:
          items:
            example: Environment Agency Metadata Profile
            type: string
            x-konfig-original-example: Environment Agency Metadata Profile
            x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-21-schema-items
          type: array
        draftStatus:
          items:
            $ref: '#/components/schemas/DraftStatus'
          type: array
        publishedStatus:
          items: {}
          type: array
        licence:
          items:
            example: Open Government Licence
            type: string
            x-konfig-original-example: Open Government Licence
            x-konfig-generated-schema: konfig-generated-schema-paths--data-sets-get-parameters-24-schema-items
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - ids
      - creator
      - keywords
      - tags
      - tagRelationship
      - category
      - spatialCoverage
      - text
      - extendedText
      - identities
      - onlyFeatured
      - showEditable
      - showHidden
      - pageNum
      - pageSize
      - offset
      - searchType
      - limit
      - legacyConcepts
      - sort
      - exchange
      - metadataStandardName
      - draftStatus
      - publishedStatus
      - licence
    konfig-generated-schema-single-parameter-schema-post--data-sets:
      properties:
        tags:
          description: List of tags on this data set.
          items:
            description: tag value
            maxLength: 80
            type: string
          type: array
        summary:
          description: Summary of the data set.
          maxLength: 140
          type: string
        title:
          description: Title for the data set.
          type: string
        description:
          description: Description of the data set.
          type: string
        id:
          $ref: '#/components/schemas/DatasetId'
        entryType:
          $ref: '#/components/schemas/EntryType'
        exchange:
          $ref: '#/components/schemas/Exchange'
        alternativeTitles:
          items:
            type: string
          type: array
        scoringURI:
          description: Scoring URI of the model.
          type: string
        endpointKey:
          description: Endpoint key for the model.
          type: string
        isOwner:
          description: Whether the current user is the owner of this data set.
          type: boolean
        publisher:
          description: The ID of the publisher.
          type: string
        createdAt:
          description: Data set creation timestamp.
          format: int64
          type: number
        published:
          description: Data set publication timestamp.
          format: int64
          type: number
        metadataModified:
          description: Metadata last-modification timestmap.
          format: int64
          type: number
        usedBy:
          description: Other data sets using this data set.
          items:
            $ref: '#/components/schemas/BasicDataSetInfo'
          type: array
        derivedFrom:
          description: |
            Data sets used to generate this data set. When updating a data set, use an array of IDs. When GETting the data set, the return type will be `BasicDataSetInfo`.
          items: {}
          type: array
        entitlements:
          description: Entitlements for the current user.
          items:
            $ref: '#/components/schemas/Entitlement'
          type: array
        entitlementsByIdentity:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Entitlement'
            type: array
          description: Array of entitlements by user identity.
          type: object
        creator:
          description: Creator of the data set.
          type: string
        dataReliability:
          description: Free text description about the reliability of this dataset.
          type: string
        license:
          deprecated: true
          description: License of the data set.
          type: string
        licence:
          $ref: '#/components/schemas/Licence'
        landingPage:
          deprecated: true
          description: DEPRECATED. This has been replaced with the resources attribute.
            Reference URI of the data set.
          type: string
        resources:
          description: Links containing more information on the data set
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        dataFormats:
          description: Format of the data set
          items:
            $ref: '#/components/schemas/DataFormat'
          type: array
        pricingDescription:
          description: Pricing description of the data set.
          type: string
        spatialCoverage:
          $ref: '#/components/schemas/SpatialCoverage'
        spatialResolution:
          description: The resolution of data set in meters.
          type: number
        geospatialExtent:
          $ref: '#/components/schemas/GeospatialExtent'
        temporalCoverage:
          description: The time frame this data set covers.
          pattern: "^\\d{4}-[01]\\d-[0-3]\\d(?:-\\d{4}-[01]\\d-[0-3]\\d)?$"
          type: string
        temporalResolution:
          description: The sampling time period of the data set.
          enum:
          - P1Y
          - P1M
          - P1D
          - PT1H
          - PT1M
          - PT1S
          type: string
        accrualPeriodicity:
          $ref: '#/components/schemas/AccrualPeriodicity'
        distributions:
          items:
            properties:
              description:
                description: Description on how to access the data set.
                type: string
              service:
                description: A data service that gives access to the data set.
                type: string
            type: object
          type: array
        issued:
          description: The date when the data set was issued.
          pattern: "^\\d{4}-[01]\\d-[0-3]\\d$"
          type: string
        modified:
          description: An timestamp of when the data in this dataset was last updated
          type: number
        keywords:
          deprecated: true
          description: List of keywords on this data set. keywords is deprecated -
            use tags instead
          items:
            description: keyword value
            type: string
          type: array
        topics:
          description: List of topics on this data set
          items:
            $ref: '#/components/schemas/Topic'
          type: array
        workflowKeywords:
          description: List of workflow keywords on this data set
          items:
            $ref: '#/components/schemas/WorkflowKeywords'
          type: array
        taxonomyKeywords:
          description: List of keywords based on specific taxonomies
          items:
            $ref: '#/components/schemas/TaxonomyKeywords'
          type: array
        category:
          $ref: '#/components/schemas/CategoryValue'
        visibility:
          description: Whether or not this data set should be displayed in the index.
          enum:
          - visible
          - hidden
          type: string
        concepts:
          description: List of concepts on this data set. Check the concepts endpoint
            to see valid values.
          items:
            description: concept URI
            type: string
          type: array
        dataSet:
          description: Information about the file data set
          properties:
            id:
              type: string
            type:
              enum:
              - file
              type: string
          type: object
        services:
          description: List of services available on the data set
          items:
            description: Service URI and Label
            properties:
              uri:
                type: string
              label:
                type: string
            type: object
          type: array
        sampleData:
          description: Optional location to download sample data
          properties:
            csv:
              type: string
            json:
              type: string
          type: object
        image:
          $ref: '#/components/schemas/ImageRepresentation'
        coordinateReferenceSystemId:
          description: URL to the specification of the coordinate system used in the
            data
          type: string
        spatialRepresentationType:
          description: Type of the geospatial data
          type: string
        lineage:
          description: Information about the creation and quality assurance process
            of the dataset
          type: string
        fromTemplate:
          description: Information about which template was used to create the dataset
            record
          type: string
        contacts:
          description: List of contacts for this data set
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        metadataContact:
          $ref: '#/components/schemas/Contact'
        publicContact:
          $ref: '#/components/schemas/PublicContact'
        approvalForAccessNumber:
          description: Approval for access status number
          type: number
        approvalForAccessStatus:
          description: Approval for access status value
          enum:
          - AfA (Information Requests only)
          - AfA (Public Register)
          - AfA (Publication Scheme and Information for Re-Use Register)
          - AfA (Publication Scheme)
          - Not AfA (To be Assessessed with Guidance)
          - Not AfA (To be Assessed)
          - Not Applicable - Third Party Dataset
          - Open Data Risk Assessment
          type: string
        language:
          description: Language used on the data set
          type: string
        characterSet:
          description: Character set used on the data set
          type: string
        hierarchyLevel:
          description: Hierarchy level of the data set
          type: string
        metadataLanguage:
          description: Language used on the metadata
          type: string
        metadataCharacterSet:
          description: Character set used on the metadata
          type: string
        metadataStandardName:
          type: string
        metadataStandardVersion:
          type: string
        draftStatus:
          $ref: '#/components/schemas/DraftStatus'
        draftNotes:
          description: Any notes added during review of the data set
          type: string
        publishedStatus:
          $ref: '#/components/schemas/PublishedStatus'
      required:
      - description
      - entryType
      - title
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--data-sets-dataSetId:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-patch--data-sets-dataSetId:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
        tags:
          description: List of tags on this data set.
          items:
            description: tag value
            maxLength: 80
            type: string
          nullable: true
          type: array
        summary:
          description: Summary of the data set.
          maxLength: 140
          type: string
        title:
          description: Title for the data set.
          type: string
        description:
          description: Description of the data set.
          type: string
        alternativeTitles:
          items:
            type: string
          type: array
        scoringURI:
          description: ScoringURI for the model.
          type: string
        endpointKey:
          description: Endpoint key for the model.
          type: string
        derivedFrom:
          description: |
            Data sets used to generate this data set. When updating a data set, use an array of IDs. When GETting the data set, the return type will be `BasicDataSetInfo`.
          items: {}
          nullable: true
          type: array
        creator:
          description: Creator of the data set.
          nullable: true
          type: string
        dataReliability:
          description: Free text description about the reliability of this dataset.
          nullable: true
          type: string
        license:
          deprecated: true
          description: License of the data set.
          nullable: true
          type: string
        licence:
          description: Licensing information and access constraint
          nullable: true
          properties:
            text:
              description: the name or contents of the licence
              type: string
            url:
              description: link to the contents of the licence
              type: string
            useLimitationStatement:
              description: "INSPIRE Limitations On Public Access, see: https://inspire.ec.europa.eu/metadata-codelist/LimitationsOnPublicAccess"
              type: string
            attributionStatement:
              description: copyright statement
              type: string
            useConstraints:
              description: "INSPIRE Conditions Applying To Access and Use, see: https://inspire.ec.europa.eu/metadata-codelist/ConditionsApplyingToAccessAndUse"
              type: string
          required:
          - text
          type: object
        resources:
          description: Links containing more information on the data set
          items:
            $ref: '#/components/schemas/Resource'
          nullable: true
          type: array
        dataFormats:
          description: Format of the data set
          items:
            $ref: '#/components/schemas/DataFormat'
          nullable: true
          type: array
        spatialCoverage:
          description: The geo spatial coverage of the data set.
          enum:
          - United Kingdom
          - England
          - Northern Ireland
          - Scotland
          - Wales
          - Canada
          - Ethiopia
          - France
          - India
          - Kenya
          - Mexico
          - Netherlands
          - Spain
          - Tanzania
          - Uganda
          - United States
          - Global only
          - null
          nullable: true
          type: string
        spatialResolution:
          description: The resolution of data set in meters.
          nullable: true
          type: number
        geospatialExtent:
          description: The geospatial extent of the data on the data set
          nullable: true
          properties:
            northBoundLatitude:
              type: number
            eastBoundLongitude:
              type: number
            southBoundLatitude:
              type: number
            westBoundLongitude:
              type: number
          required:
          - eastBoundLongitude
          - northBoundLatitude
          - southBoundLatitude
          - westBoundLongitude
          type: object
        temporalCoverage:
          description: The time frame this data set covers.
          nullable: true
          pattern: "^\\d{4}-[01]\\d-[0-3]\\d(?:-\\d{4}-[01]\\d-[0-3]\\d)?$"
          type: string
        temporalExtent:
          properties:
            begin:
              description: The beginning of the period of time covered by the data
                set.
              type: string
            end:
              description: "The end of the period of time covered by the data set.\
                \ If empty, the collection of data is ongoing."
              type: string
          required:
          - begin
          type: object
        temporalResolution:
          description: The sampling time period of the data set.
          enum:
          - P1Y
          - P1M
          - P1D
          - PT1H
          - PT1M
          - PT1S
          - null
          nullable: true
          type: string
        topics:
          items:
            $ref: '#/components/schemas/Topic'
          type: array
        workflowKeywords:
          description: List of workflow keywords on this data set
          items:
            $ref: '#/components/schemas/WorkflowKeywords'
          type: array
        taxonomyKeywords:
          description: List of keywords based on specific taxonomies
          items:
            $ref: '#/components/schemas/TaxonomyKeywords'
          type: array
        accrualPeriodicity:
          description: The frequency at which data set is published.
          enum:
          - Hourly
          - Daily
          - Three times a week
          - Semiweekly
          - Weekly
          - Three times a month
          - Biweekly
          - Semimonthly
          - Monthly
          - Bimonthly
          - Quarterly
          - Three times a year
          - Semiannual
          - Annual
          - Biennial
          - Triennial
          - Continuous
          - Irregular
          - continual
          - daily
          - weekly
          - fortnightly
          - monthly
          - quarterly
          - biannually
          - annually
          - asNeeded
          - irregular
          - notPlanned
          - unknown
          - null
          nullable: true
          type: string
        issued:
          description: The date when the data set was issued.
          nullable: true
          pattern: "^\\d{4}-[01]\\d-[0-3]\\d$"
          type: string
        createdAt:
          description: Data set creation timestamp.
          format: int64
          nullable: true
          type: number
        published:
          description: Data set publication timestamp.
          format: int64
          nullable: true
          type: number
        publishedStatus:
          $ref: '#/components/schemas/PublishedStatus'
        modified:
          description: An timestamp of when the data in this dataset was last updated
          nullable: true
          type: number
        category:
          $ref: '#/components/schemas/CategoryValue'
        visibility:
          description: Whether or not this data set should be displayed in the index.
          enum:
          - visible
          - hidden
          type: string
        pricingDescription:
          description: Pricing description of the data set.
          type: string
        distributions:
          items:
            properties:
              description:
                description: Description on how to access the data set.
                type: string
              service:
                description: A data service that gives access to the data set.
                type: string
            type: object
          type: array
        approvalForAccessNumber:
          description: Approval for access status number
          nullable: true
          type: number
        approvalForAccessStatus:
          description: Approval for access status value
          enum:
          - AfA (Information Requests only)
          - AfA (Public Register)
          - AfA (Publication Scheme and Information for Re-Use Register)
          - AfA (Publication Scheme)
          - Not AfA (To be Assessessed with Guidance)
          - Not AfA (To be Assessed)
          - Not Applicable - Third Party Dataset
          - Open Data Risk Assessment
          - null
          nullable: true
          type: string
        contacts:
          description: List of contacts for this data set
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        metadataContact:
          description: Contact for the metadata on this data set
          nullable: true
          properties:
            organisationName:
              description: Organisation name for this contact
              type: string
            individualName:
              description: Individual name for this contact
              type: string
            emailAddress:
              description: Email address for this contact
              type: string
            role:
              description: The role of this contact as it relates to the data set
              enum:
              - resourceProvider
              - custodian
              - owner
              - user
              - distributor
              - originator
              - pointOfContact
              - principalInvestigator
              - processor
              - publisher
              - author
              type: string
          required:
          - organisationName
          - role
          type: object
        lineage:
          description: Information about the creation and quality assurance process
            of the dataset
          nullable: true
          type: string
        language:
          description: Language used on the data set
          nullable: true
          type: string
        characterSet:
          description: Character set used on the data set
          nullable: true
          type: string
        hierarchyLevel:
          description: Hierarchy level of the data set
          nullable: true
          type: string
        metadataLanguage:
          description: Language used on the metadata
          nullable: true
          type: string
        metadataCharacterSet:
          description: Character set used on the metadata
          nullable: true
          type: string
        metadataStandardName:
          nullable: true
          type: string
        metadataStandardVersion:
          nullable: true
          type: string
        coordinateReferenceSystemId:
          description: URL to the specification of the coordinate system used in the
            data
          nullable: true
          type: string
        spatialRepresentationType:
          description: Type of the geospatial data
          nullable: true
          type: string
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-put--data-sets-dataSetId:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
        tags:
          description: List of tags on this data set.
          items:
            description: tag value
            maxLength: 80
            type: string
          type: array
        summary:
          description: Summary of the data set.
          maxLength: 140
          type: string
        title:
          description: Title for the data set.
          type: string
        description:
          description: Description of the data set.
          type: string
        id:
          $ref: '#/components/schemas/DatasetId'
        entryType:
          $ref: '#/components/schemas/EntryType'
        exchange:
          $ref: '#/components/schemas/Exchange'
        alternativeTitles:
          items:
            type: string
          type: array
        scoringURI:
          description: Scoring URI of the model.
          type: string
        endpointKey:
          description: Endpoint key for the model.
          type: string
        isOwner:
          description: Whether the current user is the owner of this data set.
          type: boolean
        publisher:
          description: The ID of the publisher.
          type: string
        createdAt:
          description: Data set creation timestamp.
          format: int64
          type: number
        published:
          description: Data set publication timestamp.
          format: int64
          type: number
        metadataModified:
          description: Metadata last-modification timestmap.
          format: int64
          type: number
        usedBy:
          description: Other data sets using this data set.
          items:
            $ref: '#/components/schemas/BasicDataSetInfo'
          type: array
        derivedFrom:
          description: |
            Data sets used to generate this data set. When updating a data set, use an array of IDs. When GETting the data set, the return type will be `BasicDataSetInfo`.
          items: {}
          type: array
        entitlements:
          description: Entitlements for the current user.
          items:
            $ref: '#/components/schemas/Entitlement'
          type: array
        entitlementsByIdentity:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Entitlement'
            type: array
          description: Array of entitlements by user identity.
          type: object
        creator:
          description: Creator of the data set.
          type: string
        dataReliability:
          description: Free text description about the reliability of this dataset.
          type: string
        license:
          deprecated: true
          description: License of the data set.
          type: string
        licence:
          $ref: '#/components/schemas/Licence'
        landingPage:
          deprecated: true
          description: DEPRECATED. This has been replaced with the resources attribute.
            Reference URI of the data set.
          type: string
        resources:
          description: Links containing more information on the data set
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        dataFormats:
          description: Format of the data set
          items:
            $ref: '#/components/schemas/DataFormat'
          type: array
        pricingDescription:
          description: Pricing description of the data set.
          type: string
        spatialCoverage:
          $ref: '#/components/schemas/SpatialCoverage'
        spatialResolution:
          description: The resolution of data set in meters.
          type: number
        geospatialExtent:
          $ref: '#/components/schemas/GeospatialExtent'
        temporalCoverage:
          description: The time frame this data set covers.
          pattern: "^\\d{4}-[01]\\d-[0-3]\\d(?:-\\d{4}-[01]\\d-[0-3]\\d)?$"
          type: string
        temporalResolution:
          description: The sampling time period of the data set.
          enum:
          - P1Y
          - P1M
          - P1D
          - PT1H
          - PT1M
          - PT1S
          type: string
        accrualPeriodicity:
          $ref: '#/components/schemas/AccrualPeriodicity'
        distributions:
          items:
            properties:
              description:
                description: Description on how to access the data set.
                type: string
              service:
                description: A data service that gives access to the data set.
                type: string
            type: object
          type: array
        issued:
          description: The date when the data set was issued.
          pattern: "^\\d{4}-[01]\\d-[0-3]\\d$"
          type: string
        modified:
          description: An timestamp of when the data in this dataset was last updated
          type: number
        keywords:
          deprecated: true
          description: List of keywords on this data set. keywords is deprecated -
            use tags instead
          items:
            description: keyword value
            type: string
          type: array
        topics:
          description: List of topics on this data set
          items:
            $ref: '#/components/schemas/Topic'
          type: array
        workflowKeywords:
          description: List of workflow keywords on this data set
          items:
            $ref: '#/components/schemas/WorkflowKeywords'
          type: array
        taxonomyKeywords:
          description: List of keywords based on specific taxonomies
          items:
            $ref: '#/components/schemas/TaxonomyKeywords'
          type: array
        category:
          $ref: '#/components/schemas/CategoryValue'
        visibility:
          description: Whether or not this data set should be displayed in the index.
          enum:
          - visible
          - hidden
          type: string
        concepts:
          description: List of concepts on this data set. Check the concepts endpoint
            to see valid values.
          items:
            description: concept URI
            type: string
          type: array
        dataSet:
          description: Information about the file data set
          properties:
            id:
              type: string
            type:
              enum:
              - file
              type: string
          type: object
        services:
          description: List of services available on the data set
          items:
            description: Service URI and Label
            properties:
              uri:
                type: string
              label:
                type: string
            type: object
          type: array
        sampleData:
          description: Optional location to download sample data
          properties:
            csv:
              type: string
            json:
              type: string
          type: object
        image:
          $ref: '#/components/schemas/ImageRepresentation'
        coordinateReferenceSystemId:
          description: URL to the specification of the coordinate system used in the
            data
          type: string
        spatialRepresentationType:
          description: Type of the geospatial data
          type: string
        lineage:
          description: Information about the creation and quality assurance process
            of the dataset
          type: string
        fromTemplate:
          description: Information about which template was used to create the dataset
            record
          type: string
        contacts:
          description: List of contacts for this data set
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        metadataContact:
          $ref: '#/components/schemas/Contact'
        publicContact:
          $ref: '#/components/schemas/PublicContact'
        approvalForAccessNumber:
          description: Approval for access status number
          type: number
        approvalForAccessStatus:
          description: Approval for access status value
          enum:
          - AfA (Information Requests only)
          - AfA (Public Register)
          - AfA (Publication Scheme and Information for Re-Use Register)
          - AfA (Publication Scheme)
          - Not AfA (To be Assessessed with Guidance)
          - Not AfA (To be Assessed)
          - Not Applicable - Third Party Dataset
          - Open Data Risk Assessment
          type: string
        language:
          description: Language used on the data set
          type: string
        characterSet:
          description: Character set used on the data set
          type: string
        hierarchyLevel:
          description: Hierarchy level of the data set
          type: string
        metadataLanguage:
          description: Language used on the metadata
          type: string
        metadataCharacterSet:
          description: Character set used on the metadata
          type: string
        metadataStandardName:
          type: string
        metadataStandardVersion:
          type: string
        draftStatus:
          $ref: '#/components/schemas/DraftStatus'
        draftNotes:
          description: Any notes added during review of the data set
          type: string
        publishedStatus:
          $ref: '#/components/schemas/PublishedStatus'
      required:
      - dataSetId
      - description
      - entryType
      - title
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-delete--data-sets-dataSetId-draft:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId-draft:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-put--data-sets-dataSetId-draft-status:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
        status: {}
        notes:
          description: Any notes added during review of the data set
          type: string
      required:
      - dataSetId
      - status
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId-fileDataset:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-post--data-sets-dataSetId-fileDataset:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId-access:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-patch--data-sets-dataSetId-access:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
        entitlements:
          $ref: '#/components/schemas/BatchIdentityInputEntitlements'
      required:
      - dataSetId
      - entitlements
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId-validationReport:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-get--data-sets-dataSetId-draft-validationReport:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-get--images-imageType-imageId:
      properties:
        imageType:
          enum:
          - custom
          - unsplash
          type: string
        imageId:
          type: string
        thumbnail:
          default: "false"
          enum:
          - "true"
          - "false"
          example: "false"
          type: string
          x-konfig-original-example: "false"
          x-konfig-generated-schema: konfig-generated-schema-paths--images-imageType-imageId-get-parameters-2-schema
      required:
      - imageId
      - imageType
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - imageType
      - imageId
      - thumbnail
    konfig-generated-schema-single-parameter-schema-put--data-sets-dataSetId-image:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
      required:
      - dataSetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
    konfig-generated-schema-single-parameter-schema-get--access-requests:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
        requestingEntityId:
          type: string
        entityId:
          items:
            type: string
          type: array
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - dataSetId
      - requestingEntityId
      - entityId
    konfig-generated-schema-single-parameter-schema-post--access-requests:
      properties:
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
        requestingEntityId:
          description: ID for the entity which is requesting access.
          type: string
        requesterName:
          description: Name of the user who requested access.
          type: string
        requesterEmail:
          description: Contact email address for the user who requested access.
          type: string
        requestMessage:
          description: Free text message provided by the user when requesting access.
          type: string
      required:
      - dataSetId
      - requestMessage
      - requestingEntityId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--access-requests-requestId:
      properties:
        requestId:
          type: string
        dataSetId:
          $ref: '#/components/schemas/DatasetId'
        accepted:
          type: boolean
      required:
      - dataSetId
      - requestId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - requestId
      - dataSetId
      - accepted
    konfig-generated-schema-single-parameter-schema-post--import:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--templates:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--templates:
      properties:
        description:
          type: string
        name:
          type: string
        dataSet:
          $ref: '#/components/schemas/DataSetPatch'
        entitlements:
          $ref: '#/components/schemas/BatchIdentityInputEntitlements'
        creatorEntitlements:
          $ref: '#/components/schemas/Entitlements'
        exchange:
          $ref: '#/components/schemas/Exchange'
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--templates-templateId:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--templates-templateId:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-patch--templates-templateId:
      properties:
        description:
          type: string
        name:
          type: string
        dataSet:
          $ref: '#/components/schemas/DataSetPatch'
        entitlements:
          $ref: '#/components/schemas/BatchIdentityInputEntitlements'
        creatorEntitlements:
          $ref: '#/components/schemas/Entitlements'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--templates-templateId:
      properties:
        description:
          type: string
        name:
          type: string
        dataSet:
          $ref: '#/components/schemas/DataSetPatch'
        entitlements:
          $ref: '#/components/schemas/BatchIdentityInputEntitlements'
        creatorEntitlements:
          $ref: '#/components/schemas/Entitlements'
        exchange:
          $ref: '#/components/schemas/Exchange'
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--harvest-group-csw:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--harvest-group-csw:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--harvest-group-dcat:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    LEPSG4326:
      example: 2.1234234
      maximum: 180
      minimum: -180
      type: number
      x-konfig-original-example: 2.1234234
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EPSG4326Longitude
    LEPSG43261:
      example: 2.1234234
      maximum: 180
      minimum: -180
      type: number
      x-konfig-original-example: 2.1234234
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EPSG4326Longitude
    LEPSG43262:
      example: 2.1234234
      maximum: 180
      minimum: -180
      type: number
      x-konfig-original-example: 2.1234234
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-EPSG4326Longitude
    Band_stats:
      example:
        std: 20.756450653076172
        min: 14
        median: 43
        max: 100
        mean: 47.695621490478516
      properties:
        min:
          example: 14
          type: number
          x-konfig-original-example: 14
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Band-properties-stats-properties-min
        mean:
          example: 47.695621490478516
          type: number
          x-konfig-original-example: 47.695621490478516
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Band-properties-stats-properties-mean
        median:
          example: 43
          type: number
          x-konfig-original-example: 43
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Band-properties-stats-properties-median
        max:
          example: 100
          type: number
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Band-properties-stats-properties-max
        std:
          example: 20.756450653076172
          type: number
          x-konfig-original-example: 20.756450653076172
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Band-properties-stats-properties-std
      required:
      - max
      - mean
      - median
      - min
      - std
      type: object
    Layer_links:
      example:
        search: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
        self: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
      properties:
        self:
          example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
          format: uri
          type: string
          x-konfig-original-example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Layer-properties-links-properties-self
        search:
          example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
          format: uri
          type: string
          x-konfig-original-example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Layer-properties-links-properties-search
      required:
      - search
      - self
      type: object
    BoundingBox_coordinates:
      example:
        minlon: 2.1234234
        maxlat: -1.1234234
        minlat: -1.1234234
        maxlon: 2.1234234
      properties:
        minlat:
          example: -1.1234234
          maximum: 90
          minimum: -90
          type: number
          x-konfig-original-example: -1.1234234
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EPSG4326Latitude
        minlon:
          example: 2.1234234
          maximum: 180
          minimum: -180
          type: number
          x-konfig-original-example: 2.1234234
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EPSG4326Longitude
        maxlat:
          example: -1.1234234
          maximum: 90
          minimum: -90
          type: number
          x-konfig-original-example: -1.1234234
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EPSG4326Latitude
        maxlon:
          example: 2.1234234
          maximum: 180
          minimum: -180
          type: number
          x-konfig-original-example: 2.1234234
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EPSG4326Longitude
      required:
      - maxlat
      - maxlon
      - minlat
      - minlon
      type: object
    PolygonOrBBoxSearch_allOf:
      properties:
        outputFormat:
          $ref: '#/components/schemas/OutputFormats'
      type: object
      example: null
    DataRequestResponse_inner:
      example:
        requesterEmail: ""
        requestId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        datasetName: datasetName
        datasetId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        requestedDate: requestedDate
        status: pending
      properties:
        requestId:
          description: The ID of the data request
          format: uuid
          type: string
        datasetId:
          description: The ID of the dataset that the data request relates to
          format: uuid
          type: string
        datasetName:
          description: The name of the dataset that the data request relates to
          type: string
        status:
          description: The status of the data request
          enum:
          - pending
          - approved
          - denied
          - cancelled
          type: string
        requestedDate:
          description: The date the data request was made
          type: string
        requesterEmail:
          description: The requesters email address
      required:
      - datasetId
      - datasetName
      - requestId
      - requestedDate
      - requesterEmail
      - status
      type: object
    DataRequestDetails_inner:
      example:
        requesterEmail: requesterEmail
        requestedFormat: application/geo+json
        projectManagerEmail: projectManagerEmail
        projectManagerName: projectManagerName
        datasetName: datasetName
        expiryDate: expiryDate
        uniqueLinkId: uniqueLinkId
        requestId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        datasetId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        requestedDate: requestedDate
        reviewedDate: ""
        projectName: projectName
        status: pending
      properties:
        requestId:
          description: The ID of the data request
          format: uuid
          type: string
        datasetId:
          description: The ID of the dataset that the data request relates to
          format: uuid
          type: string
        datasetName:
          description: The name of the dataset that the data request relates to
          type: string
        status:
          description: The status of the data request
          enum:
          - pending
          - approved
          - denied
          - cancelled
          type: string
        requestedDate:
          description: The date the data request was made
          type: string
        reviewedDate:
          description: The date the data request was approved or rejected
        requestedFormat:
          description: The format the user would like the data to be provided in
          enum:
          - application/geo+json
          - application/gml+xml; version=3.2
          - application/vnd.google-earth.kml+xml
          - application/zipped-shapefile
          - application/x.gdb+zip
          - application/x.mid-mif+zip
          - application/x.tab+zip
          - application/dxf
          - image/tiff
          type: string
        projectName:
          description: The name of the project the data is for
          type: string
        projectManagerName:
          description: The name of the project manager who can approve the request
          type: string
        projectManagerEmail:
          description: The email address of the project manager who can approve the
            request
          type: string
        requesterEmail:
          description: The email of the person who made the data request
          type: string
        expiryDate:
          description: The date until which the data from an approved request can
            be downloaded
          type: string
        uniqueLinkId:
          type: string
      required:
      - datasetId
      - datasetName
      - requestId
      - requestedDate
      - status
      type: object
    DataSet_distributions_inner:
      example:
        service: service
        description: description
      properties:
        description:
          description: Description on how to access the data set.
          type: string
        service:
          description: A data service that gives access to the data set.
          type: string
      type: object
    DataSet_dataSet:
      description: Information about the file data set
      example:
        id: id
        type: file
      properties:
        id:
          type: string
        type:
          enum:
          - file
          type: string
      type: object
    DataSet_services_inner:
      description: Service URI and Label
      example:
        label: label
        uri: uri
      properties:
        uri:
          type: string
        label:
          type: string
      type: object
    DataSet_sampleData:
      description: Optional location to download sample data
      example:
        csv: csv
        json: json
      properties:
        csv:
          type: string
        json:
          type: string
      type: object
    DataSetTemplateEntity_allOf:
      properties:
        id:
          type: string
      required:
      - dataSet
      - entitlements
      - id
      type: object
      example: null
    DataSetPatch_licence:
      description: Licensing information and access constraint
      example:
        attributionStatement: attributionStatement
        text: text
        useConstraints: useConstraints
        useLimitationStatement: useLimitationStatement
        url: url
      nullable: true
      properties:
        text:
          description: the name or contents of the licence
          type: string
        url:
          description: link to the contents of the licence
          type: string
        useLimitationStatement:
          description: "INSPIRE Limitations On Public Access, see: https://inspire.ec.europa.eu/metadata-codelist/LimitationsOnPublicAccess"
          type: string
        attributionStatement:
          description: copyright statement
          type: string
        useConstraints:
          description: "INSPIRE Conditions Applying To Access and Use, see: https://inspire.ec.europa.eu/metadata-codelist/ConditionsApplyingToAccessAndUse"
          type: string
      required:
      - text
      type: object
    DataSetPatch_geospatialExtent:
      description: The geospatial extent of the data on the data set
      example:
        northBoundLatitude: 6.027456183070403
        southBoundLatitude: 5.962133916683182
        eastBoundLongitude: 1.4658129805029452
        westBoundLongitude: 5.637376656633329
      nullable: true
      properties:
        northBoundLatitude:
          type: number
        eastBoundLongitude:
          type: number
        southBoundLatitude:
          type: number
        westBoundLongitude:
          type: number
      required:
      - eastBoundLongitude
      - northBoundLatitude
      - southBoundLatitude
      - westBoundLongitude
      type: object
    DataSetPatch_temporalExtent:
      example:
        end: end
        begin: begin
      properties:
        begin:
          description: The beginning of the period of time covered by the data set.
          type: string
        end:
          description: "The end of the period of time covered by the data set. If\
            \ empty, the collection of data is ongoing."
          type: string
      required:
      - begin
      type: object
    DataSetPatch_metadataContact:
      description: Contact for the metadata on this data set
      example:
        organisationName: organisationName
        emailAddress: emailAddress
        role: resourceProvider
        individualName: individualName
      nullable: true
      properties:
        organisationName:
          description: Organisation name for this contact
          type: string
        individualName:
          description: Individual name for this contact
          type: string
        emailAddress:
          description: Email address for this contact
          type: string
        role:
          description: The role of this contact as it relates to the data set
          enum:
          - resourceProvider
          - custodian
          - owner
          - user
          - distributor
          - originator
          - pointOfContact
          - principalInvestigator
          - processor
          - publisher
          - author
          type: string
      required:
      - organisationName
      - role
      type: object
    ImageRepresentation_author:
      description: The author of the image and a link to their website.
      example:
        name: name
        url: https://openapi-generator.tech
      properties:
        name:
          type: string
        url:
          format: uri
          type: string
      type: object
    Entitlements_catalog:
      example:
        read: true
        readSensitive: true
        write: true
      properties:
        read:
          type: boolean
        readSensitive:
          type: boolean
        write:
          type: boolean
      type: object
    Entitlements_dataSet:
      example:
        read: true
        write: true
      properties:
        read:
          type: boolean
        write:
          type: boolean
      type: object
    BatchIdentityInputEntitlements_inner:
      example:
        entitlements:
          catalog:
            read: true
            readSensitive: true
            write: true
          isAdmin: true
          dataSet:
            read: true
            write: true
        identity:
          name: name
          id: id
          type: user
          email: email
      properties:
        identity:
          $ref: '#/components/schemas/IdentityInput'
        entitlements:
          $ref: '#/components/schemas/Entitlements'
      required:
      - entitlements
      - identity
      type: object
    IdentityEntitlements_identity:
      description: The entity with the entitlements on this resource
      example:
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
      type: object
    AuthenticationGetJwtResponse_jwts_agrimetrics:
      example:
        access_token: 9d7e80a0-ad76-4a5c-8810-91ffc9d5858f
        token_type: Bearer
      properties:
        token_type:
          example: Bearer
          type: string
          x-konfig-original-example: Bearer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetJwtResponse-properties-jwts-properties-agrimetrics-properties-token_type
        access_token:
          example: 9d7e80a0-ad76-4a5c-8810-91ffc9d5858f
          type: string
          x-konfig-original-example: 9d7e80a0-ad76-4a5c-8810-91ffc9d5858f
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetJwtResponse-properties-jwts-properties-agrimetrics-properties-access_token
      type: object
    AuthenticationGetJwtResponse_jwts:
      example:
        agrimetrics:
          access_token: 9d7e80a0-ad76-4a5c-8810-91ffc9d5858f
          token_type: Bearer
      properties:
        agrimetrics:
          $ref: '#/components/schemas/AuthenticationGetJwtResponse_jwts_agrimetrics'
      type: object
    StatusGetCatalogApiStatusResponse__links_self:
      example:
        href: href
      properties:
        href:
          type: string
      required:
      - href
      type: object
    StatusGetCatalogApiStatusResponse__links:
      example:
        self:
          href: href
      properties:
        self:
          $ref: '#/components/schemas/StatusGetCatalogApiStatusResponse__links_self'
      required:
      - self
      type: object
    QueryLayerMetadataResponse_links:
      example:
        search: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
        self: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
      properties:
        self:
          example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
          format: uri
          type: string
          x-konfig-original-example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-QueryLayerMetadataResponse-properties-links-properties-self
        search:
          example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
          format: uri
          type: string
          x-konfig-original-example: https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-QueryLayerMetadataResponse-properties-links-properties-search
      required:
      - search
      - self
      type: object
  securitySchemes:
    sec0:
      in: header
      name: ocp-apim-subscription-key
      type: apiKey
      x-konfig-globally-required-security: false
    JWT:
      bearerFormat: JWT
      description: For requests to https://app.agrimetrics.co.uk/backend.
      scheme: bearer
      type: http
      x-konfig-globally-required-security: true
    apiKeyHeader:
      description: For requests to https://api.agrimetrics.co.uk
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
      x-konfig-globally-required-security: false
    xUserHeader:
      description: For internal use only.
      in: header
      name: x-user-id
      type: apiKey
      x-konfig-globally-required-security: false
    apiKeyQuery:
      description: (NOT RECOMMENDED) For requests where sending custom headers is
        not possible.
      in: query
      name: subscription-key
      type: apiKey
      x-konfig-globally-required-security: false
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
x-readme-fauxas: true

